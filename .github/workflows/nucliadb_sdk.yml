name: NucliaDB SDK (py)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-checks:
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]
    uses: ./.github/workflows/_component_prechecks.yml
    with:
      python_version: "${{ matrix.python-version }}"
      component: "nucliadb_sdk"

  # Job to run tests
  tests:
    name: NucliaDBSDKTests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install the package
        run: make -C nucliadb_sdk/ install-dev

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            nucliadb_modified:
              - 'nucliadb/**'
            nucliadb_node_modified:
              - 'nucliadb_core/**'
              - 'nucliadb_node/src/**'
              - 'nucliadb_paragraphs/**'
              - 'nucliadb_paragraphs/**'
              - 'nucliadb_procs/**'
              - 'nucliadb_relations/**'
              - 'nucliadb_relations2/**'
              - 'nucliadb_telemetry/**'
              - 'nucliadb_texts/**'
              - 'nucliadb_texts2/**'
              - 'nucliadb_vectors/**'

      - name: Build local NucliaDB for testing
        if: steps.filter.outputs.nucliadb_modified == 'true' && steps.filter.outputs.nucliadb_node_modified == 'false'
        run: |
          docker build -t nuclia/nucliadb:latest -f Dockerfile .

      - name: Build local NucliaDB with Binding for testing
        if: steps.filter.outputs.nucliadb_node_modified == 'true'
        run: |
          docker build -t nuclia/nucliadb:latest -f Dockerfile.withbinding --build-arg RUST_BUILD_PROFILE=dev .

      - name: Run tests
        run: |
          pytest -rfE --cov=nucliadb_sdk -s --tb=native -v --cov-report xml --cov-append nucliadb_sdk/nucliadb_sdk

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: sdk
