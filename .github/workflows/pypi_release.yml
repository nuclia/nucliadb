name: PyPI Releases

on:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup env
        run: |
          pip install wheel
          pip install -U twine

      - name: Set dependency versions in requirements
        run: |
          python bump.py --build=${{github.run_number}}
      
      - uses: dorny/paths-filter@v2
        id: component_changes
        with:
          filters: |
            nucliadb_protos:
              - 'nucliadb_protos/**'
            nucliadb_utils:
              - 'nucliadb_utils/**'
            nucliadb_models:
              - 'nucliadb_models/**'
            nucliadb_sdk:
              - 'nucliadb_sdk/**'
            nucliadb_dataset:
              - 'nucliadb_dataset/**'
            nucliadb_telemetry:
              - 'nucliadb_telemetry/**'

      # Install all packages we are going to release
      - name: Install all packages
        run: |
          pip install -e ./nucliadb_protos/python/
          pip install -e ./nucliadb_telemetry/
          pip install -e ./nucliadb_utils/
          pip install -e ./nucliadb_models/
          pip install -e ./nucliadb_sdk/
          pip install -e ./nucliadb_dataset/
          pip install -e ./nucliadb/

      - name: Build wheels
        run: pip wheel --no-deps -w dist ./nucliadb_protos/python/ ./nucliadb_utils/ ./nucliadb_models/ ./nucliadb_sdk/ ./nucliadb_telemetry ./nucliadb_dataset/ ./nucliadb/

      # XXX wait for tests to run successfully in all dependencies before we actually release
      - name: Wait for utils
        uses: lewagon/wait-on-check-action@v1.3.1
        if: steps.component_changes.outputs.nucliadb_utils == 'true'
        with:
          ref: main
          check-name: NucliaDBUtilsTests (3.11)
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for sdk tests
        uses: lewagon/wait-on-check-action@v1.3.1
        if: steps.component_changes.outputs.nucliadb_sdk == 'true'
        with:
          ref: main
          check-name: NucliaDBSDKTests (3.11)
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for dataset tests
        uses: lewagon/wait-on-check-action@v1.3.1
        if: steps.component_changes.outputs.nucliadb_dataset == 'true'
        with:
          ref: main
          check-name: NucliaDBDatasetTests (3.11)
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for telemetry tests
        uses: lewagon/wait-on-check-action@v1.3.1
        if: steps.component_changes.outputs.nucliadb_telemetry == 'true'
        with:
          ref: main
          check-name: NucliaDBTelemetryTests (3.11)
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for nucliadb tests
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: main
          check-name: NucliaDBTests (3.11, pg)
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Upload to pypi
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      # failing, disable for now
      # - name: Run Nuclia SDK tests
      #   uses: peter-evans/repository-dispatch@v2
      #   with:
      #     token: ${{ secrets.GH_CICD_PUBLIC }}
      #     repository: nuclia/nuclia.py
      #     event-type: test-stage
      #     client-payload: '{"component": "nucliadb", "commit": "${{ github.sha }}", "user": "${{ github.actor }}"}'