name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: "stage"

concurrency:
  group: deploy_workflow-${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  GCP_WORKLOAD_IDENTITY_PROVIDER: "projects/224545243904/locations/global/workloadIdentityPools/gh-nuclia/providers/gh-nuclia-provider"
  GCP_SERVICE_ACCOUNT: "github-actions@nuclia-internal.iam.gserviceaccount.com"
  ARTIFACT_REGISTRY_URL: oci://europe-west4-docker.pkg.dev/nuclia-internal/charts

jobs:
  build-python-image:
    name: Build Python image
    uses: ./.github/workflows/_build-img-nucliadb.yml
    with:
      file: Dockerfile
      image-name: nucliadb_hosted
    secrets: inherit

  build-nidx-image:
    name: Build nidx image
    uses: ./.github/workflows/_build-img-nucliadb.yml
    with:
      file: Dockerfile.nidx
      image-name: nidx
    secrets: inherit

  upload-chart-nucliadb-shared:
    name: Deploy nucliadb shared
    runs-on: ubuntu-24.04
    steps:
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_ID_NUCLIABOT }}
          private-key: ${{ secrets.PK_GHAPP_NUCLIABOT }}
          owner: nuclia

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
          token_format: access_token

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Calculate short sha
        id: env-vars
        run: |-
          HASH=`git rev-parse --short HEAD`
          echo "short_sha=$HASH" >> $GITHUB_OUTPUT

      - name: Set helm package image
        id: version_step
        run: |-
          VERSION=`cat VERSION`
          VERSION_SHA=$VERSION-${{ steps.env-vars.outputs.short_sha }}
          sed -i.bak "s#99999.99999.99999#$VERSION_SHA#" ./charts/nucliadb_shared/Chart.yaml
          echo "version_number=$VERSION_SHA" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.3

      - name: Push helm package
        run: |-
          helm lint charts/nucliadb_shared
          helm package charts/nucliadb_shared
          helm push nucliadb_shared-${{ steps.version_step.outputs.version_number }}.tgz ${{ env.ARTIFACT_REGISTRY_URL }}

  upload-charts-nucliadb-component:
    name: Upload NucliaDB component charts
    runs-on: ubuntu-24.04
    outputs:
      version_number: ${{ steps.version_step.outputs.version_number }}
    needs:
      - build-python-image
    strategy:
      matrix:
        component:
          - ingest
          - reader
          - search
          - train
          - writer
    steps:
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_ID_NUCLIABOT }}
          private-key: ${{ secrets.PK_GHAPP_NUCLIABOT }}
          owner: nuclia

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
          token_format: access_token

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Calculate short sha
        id: env-vars
        run: |-
          HASH=`git rev-parse --short HEAD`
          echo "short_sha=$HASH" >> $GITHUB_OUTPUT

      - name: Set helm package image
        id: version_step
        env:
          CONTAINER_REGISTRY: europe-west4-docker.pkg.dev/nuclia-internal/nuclia
        run: |-
          sed -i.bak "s#IMAGE_TO_REPLACE#nucliadb_hosted:${{ steps.env-vars.outputs.short_sha }}#" ./charts/nucliadb_${{ matrix.component }}/values.yaml
          sed -i.bak "s#CONTAINER_REGISTRY_TO_REPLACE#$CONTAINER_REGISTRY#" ./charts/nucliadb_${{ matrix.component }}/values.yaml
          VERSION=`cat VERSION`
          VERSION_SHA=$VERSION-${{ steps.env-vars.outputs.short_sha }}
          sed -i.bak "s#99999.99999.99999#$VERSION_SHA#" ./charts/nucliadb_${{ matrix.component }}/Chart.yaml
          echo "version_number=$VERSION_SHA" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.3

      - name: Push helm package
        run: |-
          helm lint charts/nucliadb_${{ matrix.component }}
          helm package charts/nucliadb_${{ matrix.component }}
          helm push nucliadb_${{ matrix.component }}-${{ steps.version_step.outputs.version_number }}.tgz ${{ env.ARTIFACT_REGISTRY_URL }}

  upload-chart-nidx:
    name: Upload nidx chart
    runs-on: ubuntu-24.04
    needs:
      - build-nidx-image
    steps:
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_ID_NUCLIABOT }}
          private-key: ${{ secrets.PK_GHAPP_NUCLIABOT }}
          owner: nuclia

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
          token_format: access_token

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Calculate short sha
        id: env-vars
        run: |-
          HASH=`git rev-parse --short HEAD`
          echo "short_sha=$HASH" >> $GITHUB_OUTPUT

      - name: Set helm package image
        id: version_step
        env:
          CONTAINER_REGISTRY: europe-west4-docker.pkg.dev/nuclia-internal/nuclia
        run: |-
          sed -i.bak "s#IMAGE_TO_REPLACE#nidx:${{ steps.env-vars.outputs.short_sha }}#" ./charts/nidx/values.yaml
          sed -i.bak "s#CONTAINER_REGISTRY_TO_REPLACE#$CONTAINER_REGISTRY#" ./charts/nidx/values.yaml
          VERSION=`cat VERSION`
          VERSION_SHA=$VERSION-${{ steps.env-vars.outputs.short_sha }}
          sed -i.bak "s#99999.99999.99999#$VERSION_SHA#" ./charts/nidx/Chart.yaml
          echo "version_number=$VERSION_SHA" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.3

      - name: Push helm package
        run: |-
          helm lint charts/nidx
          helm package charts/nidx
          helm push nidx-${{ steps.version_step.outputs.version_number }}.tgz ${{ env.ARTIFACT_REGISTRY_URL }}

  deploy-nucliadb-components:
    name: Deploy NucliaDB components
    runs-on: ubuntu-24.04
    needs:
      - upload-chart-nucliadb-shared
      - upload-charts-nucliadb-component
      - upload-chart-nidx
    steps:
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_ID_NUCLIABOT }}
          private-key: ${{ secrets.PK_GHAPP_NUCLIABOT }}
          owner: nuclia

      - name: Send to promotion queue
        id: send-to-promo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: nuclia/core-apps
          event-type: promotions
          client-payload: |-
            {
              "commit-sha": "${{ github.sha }}",
              "components": [
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nidx",
                  "component-type": "regional"
                },
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nucliadb_shared",
                  "component-type": "regional"
                },
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nucliadb_ingest",
                  "component-type": "regional"
                },
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nucliadb_reader",
                  "component-type": "regional"
                },
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nucliadb_search",
                  "component-type": "regional"
                },
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nucliadb_train",
                  "component-type": "regional"
                },
                {
                  "chart-version": "${{ needs.upload-charts-nucliadb-component.outputs.version_number }}",
                  "component": "nucliadb_writer",
                  "component-type": "regional"
                }
              ],
              "environment": "${{ inputs.environment }}",
              "promo_production": false,
              "skip_argo_health": false,
              "skip_promo_queue": false,
              "slack_team": "S06B7JZMC76",
              "team": "nucliadb",
              "tests": {
                "run-e2e": true,
                "run-nua-e2e": false
              }
            }
