FROM eu.gcr.io/stashify-218417/basenode:latest as planner

# XXX As COPY copies the contents of a directory and not the directory itself,
# we use multiple COPY commands to avoid including Pyhton sources. Ideally, we
# should have a single COPY command getting all Rust code.
COPY Cargo.toml \
    Cargo.lock \
    rust-toolchain.toml \
    /nucliadb/
COPY nucliadb_core /nucliadb/nucliadb_core
COPY nucliadb_node /nucliadb/nucliadb_node
COPY nucliadb_paragraphs /nucliadb/nucliadb_paragraphs
COPY nucliadb_protos /nucliadb/nucliadb_protos
COPY nucliadb_relations /nucliadb/nucliadb_relations
COPY nucliadb_telemetry /nucliadb/nucliadb_telemetry
COPY nucliadb_texts /nucliadb/nucliadb_texts
COPY nucliadb_vectors /nucliadb/nucliadb_vectors
COPY vectors_benchmark /nucliadb/vectors_benchmark

RUN cargo chef prepare --recipe-path recipe.json

# --------------------------------------------------------------------

FROM eu.gcr.io/stashify-218417/basenode:latest as builder

ARG CARGO_FEATURES=release-feature-set
ARG CARGO_PROFILE=release
ENV RUSTFLAGS="--cfg prometheus_metrics"

COPY --from=planner /nucliadb/recipe.json recipe.json

# Build dependencies (this is the cached docker layer)
RUN cargo chef cook \
    --recipe-path recipe.json \
    --features $CARGO_FEATURES \
    $(test "$CARGO_PROFILE" = "release" && echo "--release")

# XXX same as above
COPY Cargo.toml \
    Cargo.lock \
    rust-toolchain.toml \
    /nucliadb/
COPY nucliadb_core /nucliadb/nucliadb_core
COPY nucliadb_node /nucliadb/nucliadb_node
COPY nucliadb_paragraphs /nucliadb/nucliadb_paragraphs
COPY nucliadb_protos /nucliadb/nucliadb_protos
COPY nucliadb_relations /nucliadb/nucliadb_relations
COPY nucliadb_telemetry /nucliadb/nucliadb_telemetry
COPY nucliadb_texts /nucliadb/nucliadb_texts
COPY nucliadb_vectors /nucliadb/nucliadb_vectors
COPY vectors_benchmark /nucliadb/vectors_benchmark

# Build application (only run when sources are modified)
RUN echo "Building workspace with feature(s) '$CARGO_FEATURES' and profile '$CARGO_PROFILE'" \
    && cargo build \
    --features $CARGO_FEATURES \
    -p nucliadb_node \
    $(test "$CARGO_PROFILE" = "release" && echo "--release") \
    && echo "Moving binaries to /nucliadb/bin" \
    && mkdir -p /nucliadb/bin \
    && find target/$CARGO_PROFILE -maxdepth 1 -perm /a+x -type f -exec mv {} /nucliadb/bin \; \
    && cargo clean

# --------------------------------------------------------------------

FROM debian:bullseye-slim AS nucliadb

ENV DATA_PATH=data
ENV RUST_LOG=nucliadb_node=DEBUG
ENV RUST_BACKTRACE=1

RUN apt-get -y update \
    && apt-get -y install ca-certificates curl \
    libssl1.1 \
    lmdb-utils \
    && rm -rf /var/lib/apt/lists/*

COPY --from=eu.gcr.io/stashify-218417/basenode:latest /bin/grpc_health_probe /bin/grpc_health_probe

COPY --from=builder /nucliadb/bin/node_reader /usr/local/bin/node_reader
COPY --from=builder /nucliadb/bin/node_writer /usr/local/bin/node_writer

EXPOSE 4444/udp
