"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import nucliadb_protos.noderesources_pb2
import nucliadb_protos.nodewriter_pb2
from nucliadb_protos.noderesources_pb2 import (
    EmptyQuery as EmptyQuery,
    EmptyResponse as EmptyResponse,
    IndexMetadata as IndexMetadata,
    IndexParagraph as IndexParagraph,
    IndexParagraphs as IndexParagraphs,
    Resource as Resource,
    ResourceID as ResourceID,
    Shard as Shard,
    ShardCreated as ShardCreated,
    ShardId as ShardId,
    ShardIds as ShardIds,
    ShardList as ShardList,
    TextInformation as TextInformation,
    VectorSentence as VectorSentence,
)


class NodeWriterStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetShard: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.ShardId,
        nucliadb_protos.noderesources_pb2.ShardId]

    NewShard: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.EmptyQuery,
        nucliadb_protos.noderesources_pb2.ShardCreated]

    DeleteShard: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.ShardId,
        nucliadb_protos.noderesources_pb2.ShardId]

    ListShards: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.EmptyQuery,
        nucliadb_protos.noderesources_pb2.ShardIds]

    GC: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.ShardId,
        nucliadb_protos.noderesources_pb2.EmptyResponse]

    SetResource: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.Resource,
        nucliadb_protos.nodewriter_pb2.OpStatus]

    RemoveResource: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.ResourceID,
        nucliadb_protos.nodewriter_pb2.OpStatus]


class NodeWriterServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetShard(self,
        request: nucliadb_protos.noderesources_pb2.ShardId,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.noderesources_pb2.ShardId: ...

    @abc.abstractmethod
    def NewShard(self,
        request: nucliadb_protos.noderesources_pb2.EmptyQuery,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.noderesources_pb2.ShardCreated: ...

    @abc.abstractmethod
    def DeleteShard(self,
        request: nucliadb_protos.noderesources_pb2.ShardId,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.noderesources_pb2.ShardId: ...

    @abc.abstractmethod
    def ListShards(self,
        request: nucliadb_protos.noderesources_pb2.EmptyQuery,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.noderesources_pb2.ShardIds: ...

    @abc.abstractmethod
    def GC(self,
        request: nucliadb_protos.noderesources_pb2.ShardId,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.noderesources_pb2.EmptyResponse: ...

    @abc.abstractmethod
    def SetResource(self,
        request: nucliadb_protos.noderesources_pb2.Resource,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.nodewriter_pb2.OpStatus: ...

    @abc.abstractmethod
    def RemoveResource(self,
        request: nucliadb_protos.noderesources_pb2.ResourceID,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.nodewriter_pb2.OpStatus: ...


def add_NodeWriterServicer_to_server(servicer: NodeWriterServicer, server: grpc.Server) -> None: ...

class NodeSidecarStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetCount: grpc.UnaryUnaryMultiCallable[
        nucliadb_protos.noderesources_pb2.ShardId,
        nucliadb_protos.nodewriter_pb2.Counter]


class NodeSidecarServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetCount(self,
        request: nucliadb_protos.noderesources_pb2.ShardId,
        context: grpc.ServicerContext,
    ) -> nucliadb_protos.nodewriter_pb2.Counter: ...


def add_NodeSidecarServicer_to_server(servicer: NodeSidecarServicer, server: grpc.Server) -> None: ...
