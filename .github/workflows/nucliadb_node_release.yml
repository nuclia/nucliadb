name: Release NucliaDB Node

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/nucliadb_node_release.yml"
      - "nucliadb_node/binding/Cargo.toml"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/nucliadb_node_release.yml"
      - "nucliadb_node/binding/Cargo.toml"

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        # target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -m nucliadb_node/binding/Cargo.toml --release --out dist --interpreter ${{ matrix.python }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -m nucliadb_node/binding/Cargo.toml --release --out dist --interpreter ${{ matrix.python }}
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -m nucliadb_node/binding/Cargo.toml --release --out dist --interpreter ${{ matrix.python }} --universal2
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: dist

  release-pypi:
    name: Release to pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [linux, windows, macos]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pypi_files
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

      - run: ${{ matrix.ls || 'ls -lh' }} dist/

      - run: twine check dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: dist
