name: PyPI and Helm Releases

on:
  workflow_call:

env:
  GCP_WORKLOAD_IDENTITY_PROVIDER: "projects/224545243904/locations/global/workloadIdentityPools/gh-nuclia/providers/gh-nuclia-provider"
  GCP_SERVICE_ACCOUNT: "github-actions@nuclia-internal.iam.gserviceaccount.com"
  ARTIFACT_REGISTRY_URL: oci://europe-west4-docker.pkg.dev/nuclia-internal/charts

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    steps:
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_ID_NUCLIABOT }}
          private-key: ${{ secrets.PK_GHAPP_NUCLIABOT }}
          owner: nuclia

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12.5

      - name: Setup env
        run: |
          pip install wheel
          pip install -U twine

      - name: Set dependency versions in requirements
        run: |
          python bump.py --build=${{github.run_number}}

      - uses: dorny/paths-filter@v2
        id: component_changes
        with:
          filters: |
            nucliadb_protos:
              - 'nucliadb_protos/**'
            nucliadb_utils:
              - 'nucliadb_utils/**'
            nucliadb_models:
              - 'nucliadb_models/**'
            nucliadb_sdk:
              - 'nucliadb_sdk/**'
            nucliadb_dataset:
              - 'nucliadb_dataset/**'
            nucliadb_telemetry:
              - 'nucliadb_telemetry/**'

      # Install all packages we are going to release
      - name: Install all packages
        run: |
          pip install -e ./nucliadb_protos/python/
          pip install -e ./nucliadb_telemetry/
          pip install -e ./nucliadb_utils/
          pip install -e ./nucliadb_models/
          pip install -e ./nucliadb_sdk/
          pip install -e ./nucliadb_dataset/
          pip install -e ./nucliadb/

      - name: Build wheels
        run: pip wheel --no-deps -w dist ./nucliadb_protos/python/ ./nucliadb_utils/ ./nucliadb_models/ ./nucliadb_sdk/ ./nucliadb_telemetry ./nucliadb_dataset/ ./nucliadb/

      - name: Upload to pypi
        run: twine upload --verbose dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  push-docker:
    name: Build and push nucliadb docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # We need to setup buildx to be able to cache with gha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get release version
        id: version_step
        run: |-
          python bump.py --build=${{github.run_number}}
          VERSION=`cat VERSION`
          HASH=`git rev-parse --short HEAD`
          echo "version_number=$VERSION" >> $GITHUB_OUTPUT
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.withbinding
          push: true
          tags: |
            nuclia/nucliadb:latest
            nuclia/nucliadb:${{ steps.version_step.outputs.version_number }}
            nuclia/nucliadb:${{ steps.version_step.outputs.hash }}
          cache-from: type=gha
          cache-to: type=gha,mode=min

  deploy:
    name: Deploy Helm chart and trigger internal CI
    runs-on: ubuntu-latest
    needs: push-docker

    steps:
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_ID_NUCLIABOT }}
          private-key: ${{ secrets.PK_GHAPP_NUCLIABOT }}
          owner: nuclia

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"
          token_format: access_token

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Calculate short sha
        id: env-vars
        run: |-
          HASH=`git rev-parse --short HEAD`
          echo "short_sha=$HASH" >> $GITHUB_OUTPUT

      - name: Set helm package image
        id: version_step
        run: |-
          python bump.py --build=${{github.run_number}}
          DOCKER_VERSION=`cat VERSION`

          # Helm package versioning does not support '.postX'. Convert to '+postX'
          HELM_VERSION=`echo $DOCKER_VERSION | sed 's/.post/-post/'`

          # Update chart with versions
          echo "HELM_VERSION=$HELM_VERSION"
          echo "DOCKER_VERSION=$DOCKER_VERSION"
          sed -i.bak "s#99999.99999.99999#$HELM_VERSION#" ./charts/nucliadb/Chart.yaml
          sed -i.bak "s#88888.88888.88888#$DOCKER_VERSION#" ./charts/nucliadb/Chart.yaml

          echo "helm_version=$HELM_VERSION" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.3

      - name: Push helm package
        run: |-
          helm lint charts/nucliadb
          helm package charts/nucliadb
          curl --data-binary "@nucliadb-${{ steps.version_step.outputs.helm_version }}.tgz" ${{ secrets.HELM_CHART_URL }}/api/charts
          helm push nucliadb-${{ steps.version_step.outputs.helm_version }}.tgz ${{ env.ARTIFACT_REGISTRY_URL }}

      - name: Send to promotion queue
        id: send-to-promo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: nuclia/core-apps
          event-type: test-new-promotions
          client-payload: |-
            {
              "commit-sha": "${{ github.sha }}",
              "components": [
                {
                  "chart-version": "${{ steps.version_step.outputs.helm_version }}",
                  "component": "nucliadb_standalone",
                  "component-type": "regional"
                }
              ],
              "environment": "stage",
              "promo_production": false,
              "skip_argo_health": false,
              "skip_promo_queue": false,
              "slack_team": "S06B7JZMC76",
              "team": "nucliadb",
              "tests": {
                "run-e2e": false,
                "run-nua-e2e": false
              }
            }
