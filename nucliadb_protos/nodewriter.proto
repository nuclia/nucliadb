syntax = "proto3";

package nodewriter;

import public "nucliadb_protos/noderesources.proto";

message OpStatus {
    enum Status {
        OK = 0;
        WARNING = 1;
        ERROR = 2;
    }
    Status status = 1;
    string detail = 2;
    uint64 count = 3;
    string shard_id = 4;
}

// Implemented at nucliadb_object_storage

message IndexMessage {
    string node = 1;
    string shard = 2;
    uint64 txid = 3;
    string resource = 4;
    enum TypeMessage {
        CREATION = 0;
        DELETION = 1;
    }
    TypeMessage typemessage = 5;
    string reindex_id = 6;
}


service NodeWriter {
    rpc GetShard(noderesources.ShardId) returns (noderesources.ShardId) {}
    rpc NewShard(noderesources.EmptyQuery) returns (noderesources.ShardCreated) {}
    rpc DeleteShard(noderesources.ShardId) returns (noderesources.ShardId) {}
    rpc ListShards(noderesources.EmptyQuery) returns (noderesources.ShardIds) {}
    rpc GC(noderesources.ShardId) returns (noderesources.EmptyResponse) {}

    rpc SetResource(noderesources.Resource) returns (OpStatus) {}
    rpc RemoveResource(noderesources.ResourceID) returns (OpStatus) {}

}

message Counter {
    uint64 resources = 1;
}


service NodeSidecar {

    rpc GetCount(noderesources.ShardId) returns (Counter) {}
}
