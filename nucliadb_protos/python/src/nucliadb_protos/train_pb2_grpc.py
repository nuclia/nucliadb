# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nucliadb_protos import train_pb2 as nucliadb__protos_dot_train__pb2
from nucliadb_protos import writer_pb2 as nucliadb__protos_dot_writer__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in nucliadb_protos/train_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TrainStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInfo = channel.unary_unary(
                '/train.Train/GetInfo',
                request_serializer=nucliadb__protos_dot_train__pb2.GetInfoRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_train__pb2.TrainInfo.FromString,
                _registered_method=True)
        self.GetSentences = channel.unary_stream(
                '/train.Train/GetSentences',
                request_serializer=nucliadb__protos_dot_train__pb2.GetSentencesRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_train__pb2.TrainSentence.FromString,
                _registered_method=True)
        self.GetParagraphs = channel.unary_stream(
                '/train.Train/GetParagraphs',
                request_serializer=nucliadb__protos_dot_train__pb2.GetParagraphsRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_train__pb2.TrainParagraph.FromString,
                _registered_method=True)
        self.GetFields = channel.unary_stream(
                '/train.Train/GetFields',
                request_serializer=nucliadb__protos_dot_train__pb2.GetFieldsRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_train__pb2.TrainField.FromString,
                _registered_method=True)
        self.GetResources = channel.unary_stream(
                '/train.Train/GetResources',
                request_serializer=nucliadb__protos_dot_train__pb2.GetResourcesRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_train__pb2.TrainResource.FromString,
                _registered_method=True)
        self.GetOntology = channel.unary_unary(
                '/train.Train/GetOntology',
                request_serializer=nucliadb__protos_dot_writer__pb2.GetLabelsRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_writer__pb2.GetLabelsResponse.FromString,
                _registered_method=True)
        self.GetEntities = channel.unary_unary(
                '/train.Train/GetEntities',
                request_serializer=nucliadb__protos_dot_writer__pb2.GetEntitiesRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_writer__pb2.GetEntitiesResponse.FromString,
                _registered_method=True)
        self.GetOntologyCount = channel.unary_unary(
                '/train.Train/GetOntologyCount',
                request_serializer=nucliadb__protos_dot_train__pb2.GetLabelsetsCountRequest.SerializeToString,
                response_deserializer=nucliadb__protos_dot_train__pb2.LabelsetsCount.FromString,
                _registered_method=True)


class TrainServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSentences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParagraphs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFields(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOntology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOntologyCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrainServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=nucliadb__protos_dot_train__pb2.GetInfoRequest.FromString,
                    response_serializer=nucliadb__protos_dot_train__pb2.TrainInfo.SerializeToString,
            ),
            'GetSentences': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSentences,
                    request_deserializer=nucliadb__protos_dot_train__pb2.GetSentencesRequest.FromString,
                    response_serializer=nucliadb__protos_dot_train__pb2.TrainSentence.SerializeToString,
            ),
            'GetParagraphs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetParagraphs,
                    request_deserializer=nucliadb__protos_dot_train__pb2.GetParagraphsRequest.FromString,
                    response_serializer=nucliadb__protos_dot_train__pb2.TrainParagraph.SerializeToString,
            ),
            'GetFields': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFields,
                    request_deserializer=nucliadb__protos_dot_train__pb2.GetFieldsRequest.FromString,
                    response_serializer=nucliadb__protos_dot_train__pb2.TrainField.SerializeToString,
            ),
            'GetResources': grpc.unary_stream_rpc_method_handler(
                    servicer.GetResources,
                    request_deserializer=nucliadb__protos_dot_train__pb2.GetResourcesRequest.FromString,
                    response_serializer=nucliadb__protos_dot_train__pb2.TrainResource.SerializeToString,
            ),
            'GetOntology': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOntology,
                    request_deserializer=nucliadb__protos_dot_writer__pb2.GetLabelsRequest.FromString,
                    response_serializer=nucliadb__protos_dot_writer__pb2.GetLabelsResponse.SerializeToString,
            ),
            'GetEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntities,
                    request_deserializer=nucliadb__protos_dot_writer__pb2.GetEntitiesRequest.FromString,
                    response_serializer=nucliadb__protos_dot_writer__pb2.GetEntitiesResponse.SerializeToString,
            ),
            'GetOntologyCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOntologyCount,
                    request_deserializer=nucliadb__protos_dot_train__pb2.GetLabelsetsCountRequest.FromString,
                    response_serializer=nucliadb__protos_dot_train__pb2.LabelsetsCount.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'train.Train', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('train.Train', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Train(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train.Train/GetInfo',
            nucliadb__protos_dot_train__pb2.GetInfoRequest.SerializeToString,
            nucliadb__protos_dot_train__pb2.TrainInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSentences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/train.Train/GetSentences',
            nucliadb__protos_dot_train__pb2.GetSentencesRequest.SerializeToString,
            nucliadb__protos_dot_train__pb2.TrainSentence.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetParagraphs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/train.Train/GetParagraphs',
            nucliadb__protos_dot_train__pb2.GetParagraphsRequest.SerializeToString,
            nucliadb__protos_dot_train__pb2.TrainParagraph.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/train.Train/GetFields',
            nucliadb__protos_dot_train__pb2.GetFieldsRequest.SerializeToString,
            nucliadb__protos_dot_train__pb2.TrainField.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/train.Train/GetResources',
            nucliadb__protos_dot_train__pb2.GetResourcesRequest.SerializeToString,
            nucliadb__protos_dot_train__pb2.TrainResource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOntology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train.Train/GetOntology',
            nucliadb__protos_dot_writer__pb2.GetLabelsRequest.SerializeToString,
            nucliadb__protos_dot_writer__pb2.GetLabelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train.Train/GetEntities',
            nucliadb__protos_dot_writer__pb2.GetEntitiesRequest.SerializeToString,
            nucliadb__protos_dot_writer__pb2.GetEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOntologyCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train.Train/GetOntologyCount',
            nucliadb__protos_dot_train__pb2.GetLabelsetsCountRequest.SerializeToString,
            nucliadb__protos_dot_train__pb2.LabelsetsCount.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
