version: "3.9"

services:
  node1:
    build:
      context: .
      dockerfile: Dockerfile.node
    environment:
      - DATA_PATH=/data
      - READER_LISTEN_ADDRESS=0.0.0.0:10001
      - WRITER_LISTEN_ADDRESS=0.0.0.0:10000
      - RUST_LOG=nucliadb_node=DEBUG
    ports:
      - "10003:10001"
      - "10004:10000"
    volumes:
      - node1-data:/data
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=:10000", "-service=nodereader.NodeReader"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  node2:
    build:
      context: .
      dockerfile: Dockerfile.node
    environment:
      - DATA_PATH=/data
      - READER_LISTEN_ADDRESS=0.0.0.0:10001
      - WRITER_LISTEN_ADDRESS=0.0.0.0:10000
    ports:
      - "10005:10001"
      - "10006:10000"
    volumes:
      - node2-data:/data
    links:
      - node1
    depends_on:
      - node1
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=:10000", "-service=nodereader.NodeReader"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  node3:
    build:
      context: .
      dockerfile: Dockerfile.node
    environment:
      - DATA_PATH=/data
      - READER_LISTEN_ADDRESS=0.0.0.0:10001
      - WRITER_LISTEN_ADDRESS=0.0.0.0:10000
    ports:
      - "10007:10001"
      - "10008:10000"
    volumes:
      - node3-data:/data
    links:
      - node1
    depends_on:
      - node1
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=:10000", "-service=nodereader.NodeReader"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  one:
    build:
      context: .
      dockerfile: Dockerfile.one
    command: 
      - "uvicorn"
      - "nucliadb_one.app:application"
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/src/app
    environment:
      # Writer
      - NUCLIA_PARTITIONS=1
      - NUCLIADB_INGEST=ingest:8030
      - DM_REDIS_HOST=redis
      - DM_REDIS_PORT=6379
      # Ingest
      - DRIVER=tikv
      - DRIVER_TIKV_URL=["pd0:2379", "pd1:2379", "pd2:2379"]
      - PARTITIONS=["1"]
      - CACHE_PUBSUB_DRIVER=nats
      - CACHE_PUBSUB_NATS_URL=["nats://nats1:4222", "nats://nats2:4222", "nats://nats3:4222"]
      - TRANSACTION_JETSTREAM_STREAM=nucliadb
      - MONITOR=True
      - INNER_METRICS_PORT=8045
      # Shared
      - FILE_BACKEND=s3
      - S3_CLIENT_ID=minio
      - S3_CLIENT_SECRET=minio123
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=dockercompo
      - TRANSACTION_JETSTREAM_SERVERS=["nats://nats1:4222", "nats://nats2:4222", "nats://nats3:4222"]
      - NUCLIA_PROXY_PUBLIC_URL=https://{zone}.stashify.cloud/api/v1
      - NUCLIA_PROXY_CLUSTER_URL=http://nucliadb_proxy.processing.svc.cluster.local:8080
      - NUCLIA_SERVICE_ACCOUNT=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InprIn0.eyJpc3MiOiJodHRwczovL3N0YXNoaWZ5LmNsb3VkLyIsImV4cCI6MjUzMzcwNzY0ODAwLCJpYXQiOjE2NDE1NDQxNTIsInN1YiI6ImI4OTM0YWY1LWVkNWQtNGQ1NS04ODMwLWIwZDA1NDllNDE2YSIsImtleSI6ImE1YTZmNzI4LWE3YTMtNDM4ZS1iZmUyLWNjNDYyMGEzMzAzNyJ9.c8QGiHSY4Xi36Wq2BnjPdqKcSwjOek0aSotl2OLlZ4XhwvtkidWbHBbAjm41tvQj7fnj8WIvY7uxmFdHv6Ul79EDmWtn6-SOQjfVxDAvf0R9JmBcj6WBLG2fXoNVxcI80KYYxlqJIT2RBoobmQWUO5gxy_m71eFqruvmmTI_mF6V3E6j8uGEbpDckt-UiSKBYSGmnG_klmKwibaDxtGgn-b9K-gYsvKGiAKIzygCdH6sM5Q1nW3zluHE3tSJVJmDStDi0sw0WFc-q9oMX1J-aSygSGSwXQ6ajmHTmebePvn-Bvwn5hSBXqzMKEEYicf-OT7BrsHnJ5AjQkBDcDqoSzc9uwpFAvXUhpYq6oFue72QY36AKvIhcFEpWXKGgT44ZMRkI8el-vQpijIXbHFDR-l7PzG9DQ9R4ZS1-bHVvEQUg2fl-UbG5fbfEalwugLW8RlBMMCWsNbn1NQjPYOqhE77tzsVDmjvShR8gytWDA1zAL2tQzLcOF-hHDjEwmsPAirnLjPIUYRCzWyKSb6EFVLJUQ6vT6eeukbYpiVG9nhPjSu2z4jpzwH7Ey_kzTL618NULA6csQJmz_BTDcBvdQe2e6QgrkjqV15Spt6rKKdQytVBXSAsG8vUQDPfzliJ84vPPxKI-dJVJmyFZ6JGZTVNRzLwg7Bvz2IEC_ELsr4
      - NUCLIA_ZONE=europe-1
      - NUCLIA_ID=b8934af5-ed5d-4d55-8830-b0d0549e416a
      - ONPREM=True
      - DEBUG=True
    depends_on:
      - redis
      - node1
      - node2
      - node3
      - pd0
      - pd1
      - pd2
      - nats1
      - nats2
      - nats3
      - minio1
      - minio2
      - minio3
      - minio4
      - minio
    links:
      - redis
      - node1
      - node2
      - node3
      - pd0
      - pd1
      - pd2
      - nats1
      - nats2
      - nats3
      - minio
volumes:
  logvolume01: {}
  node1-data: {}
  node2-data: {}
  node3-data: {}