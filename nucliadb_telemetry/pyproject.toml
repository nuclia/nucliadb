[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "nucliadb_telemetry"
dynamic = ["version"]
license = { text = "AGPL" }
description = "NucliaDB Telemetry Library Python process"
authors = [ { name = "Nuclia", email = "nucliadb@nuclia.com" }]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Framework :: AsyncIO",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.9, <4"
dependencies = [
    "pydantic>=2.6",
    "pydantic-settings>=2.2",
    "prometheus-client>=0.12.0",
    "orjson>=3.6.7",
    "wrapt>=1.14.1",
]

[project.optional-dependencies]
otel = [
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-proto>=1.21.0",
    "opentelemetry-exporter-jaeger>=1.21.0",
    "opentelemetry-propagator-b3>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-semantic-conventions>=0.42b0",
]
grpc = [
    "grpcio>=1.44.0",
    "grpcio-health-checking>=1.44.0",
    "grpcio-channelz>=1.44.0",
    "grpcio-status>=1.44.0",
    "grpcio-tools>=1.44.0",
    "grpcio-testing>=1.44.0",
    "grpcio-reflection>=1.44.0",
    "nucliadb_telemetry[otel]",
]
nats = [
    "nats-py[nkeys]>=2.5.0",
    "PyNaCl",
    "nucliadb_telemetry[otel]",
]
fastapi = [
    "fastapi",
    "nucliadb_telemetry[otel]",
]
all = [
    "nucliadb_telemetry[otel,grpc,nats,fastapi]",
]

[project.urls]
Homepage = "https://nuclia.com"
Repository = "https://github.com/nuclia/nucliadb"

[tool.setuptools.dynamic]
version = { file = "VERSION" }
