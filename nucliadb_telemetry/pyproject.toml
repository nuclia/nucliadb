[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "nucliadb_telemetry"
version = "6.8.0"
license = "AGPL-3.0-or-later"
description = "NucliaDB Telemetry Library Python process"
authors = [{ name = "Nuclia", email = "nucliadb@nuclia.com" }]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Framework :: AsyncIO",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.9, <4"
dependencies = [
    "pydantic>=2.6",
    "pydantic-settings>=2.2",
    "prometheus-client>=0.12.0",
    "orjson>=3.6.7",
    "wrapt>=1.14.1",
]

[project.optional-dependencies]
# The following has a lot of repetition. It can be avoided by adding
# ourselves as a dependency (e.g: nucliadb_telemetry[otel]) in each group
# dependencies but that can run into problems when installing editable
# dependencies. Keeping the duplication for now.
otel = [
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-proto>=1.21.0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-propagator-b3>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-semantic-conventions>=0.42b0",
]
grpc = [
    "grpcio>=1.71.0",
    "grpcio-health-checking>=1.71.0",
    "grpcio-channelz>=1.71.0",
    "grpcio-status>=1.71.0",
    "grpcio-tools>=1.71.0",
    "grpcio-testing>=1.71.0",
    "grpcio-reflection>=1.71.0",

    # Include OpenTelemetry deps
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-proto>=1.21.0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-propagator-b3>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-semantic-conventions>=0.42b0",
]
nats = [
    "nats-py[nkeys]>=2.5.0",
    "PyNaCl",

    # Include OpenTelemetry deps
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-proto>=1.21.0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-propagator-b3>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-semantic-conventions>=0.42b0",
]
fastapi = [
    "fastapi",

    # Include OpenTelemetry deps
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-proto>=1.21.0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-propagator-b3>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-semantic-conventions>=0.42b0",
]
all = [
    # Include everything
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-proto>=1.21.0",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-propagator-b3>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-aiohttp-client>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-semantic-conventions>=0.42b0",

    "grpcio>=1.71.0",
    "grpcio-health-checking>=1.71.0",
    "grpcio-channelz>=1.71.0",
    "grpcio-status>=1.71.0",
    "grpcio-tools>=1.71.0",
    "grpcio-testing>=1.71.0",
    "grpcio-reflection>=1.71.0",

    "nats-py[nkeys]>=2.5.0",
    "PyNaCl",

    "fastapi",
]

[project.urls]
Homepage = "https://nuclia.com"
Repository = "https://github.com/nuclia/nucliadb"

[tool.pytest.ini_options]
asyncio_mode = "auto"
