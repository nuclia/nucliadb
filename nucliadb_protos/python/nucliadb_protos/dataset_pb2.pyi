"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TaskType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FIELD_CLASSIFICATION: _TaskType.ValueType  # 0
    PARAGRAPH_CLASSIFICATION: _TaskType.ValueType  # 1
    SENTENCE_CLASSIFICATION: _TaskType.ValueType  # 2
    TOKEN_CLASSIFICATION: _TaskType.ValueType  # 3
class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper):
    """Train API V2"""
    pass

FIELD_CLASSIFICATION: TaskType.ValueType  # 0
PARAGRAPH_CLASSIFICATION: TaskType.ValueType  # 1
SENTENCE_CLASSIFICATION: TaskType.ValueType  # 2
TOKEN_CLASSIFICATION: TaskType.ValueType  # 3
global___TaskType = TaskType


class _LabelFrom:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LabelFromEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LabelFrom.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PARAGRAPH: _LabelFrom.ValueType  # 0
    FIELD: _LabelFrom.ValueType  # 1
    RESOURCE: _LabelFrom.ValueType  # 2
class LabelFrom(_LabelFrom, metaclass=_LabelFromEnumTypeWrapper):
    pass

PARAGRAPH: LabelFrom.ValueType  # 0
FIELD: LabelFrom.ValueType  # 1
RESOURCE: LabelFrom.ValueType  # 2
global___LabelFrom = LabelFrom


class TrainSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Filter(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        LABELS_FIELD_NUMBER: builtins.int
        @property
        def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        def __init__(self,
            *,
            labels: typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    type: global___TaskType.ValueType
    @property
    def filter(self) -> global___TrainSet.Filter: ...
    batch_size: builtins.int
    def __init__(self,
        *,
        type: global___TaskType.ValueType = ...,
        filter: typing.Optional[global___TrainSet.Filter] = ...,
        batch_size: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["filter",b"filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","filter",b"filter","type",b"type"]) -> None: ...
global___TrainSet = TrainSet

class Label(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LABELSET_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    ORIGIN_FIELD_NUMBER: builtins.int
    labelset: typing.Text
    label: typing.Text
    origin: global___LabelFrom.ValueType
    def __init__(self,
        *,
        labelset: typing.Text = ...,
        label: typing.Text = ...,
        origin: global___LabelFrom.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["label",b"label","labelset",b"labelset","origin",b"origin"]) -> None: ...
global___Label = Label

class TextLabel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    text: typing.Text
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Label]: ...
    def __init__(self,
        *,
        text: typing.Text = ...,
        labels: typing.Optional[typing.Iterable[global___Label]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels","text",b"text"]) -> None: ...
global___TextLabel = TextLabel

class MultipleTextSameLabels(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    @property
    def text(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Label]: ...
    def __init__(self,
        *,
        text: typing.Optional[typing.Iterable[typing.Text]] = ...,
        labels: typing.Optional[typing.Iterable[global___Label]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels","text",b"text"]) -> None: ...
global___MultipleTextSameLabels = MultipleTextSameLabels

class FieldClassificationBatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextLabel]: ...
    def __init__(self,
        *,
        data: typing.Optional[typing.Iterable[global___TextLabel]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___FieldClassificationBatch = FieldClassificationBatch

class ParagraphClassificationBatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextLabel]: ...
    def __init__(self,
        *,
        data: typing.Optional[typing.Iterable[global___TextLabel]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___ParagraphClassificationBatch = ParagraphClassificationBatch

class SentenceClassificationBatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MultipleTextSameLabels]: ...
    def __init__(self,
        *,
        data: typing.Optional[typing.Iterable[global___MultipleTextSameLabels]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___SentenceClassificationBatch = SentenceClassificationBatch

class TokensClassification(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TOKEN_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    @property
    def token(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def label(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        token: typing.Optional[typing.Iterable[typing.Text]] = ...,
        label: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["label",b"label","token",b"token"]) -> None: ...
global___TokensClassification = TokensClassification

class TokenClassificationBatch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TokensClassification]: ...
    def __init__(self,
        *,
        data: typing.Optional[typing.Iterable[global___TokensClassification]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___TokenClassificationBatch = TokenClassificationBatch
