<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="549.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="70"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 1.43%)</title><rect x="0.0000%" y="485" width="1.4286%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 1.43%)</title><rect x="0.0000%" y="469" width="1.4286%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>payload_test`nucliadb_node::writer::NodeWriterService::new_shard (1 samples, 1.43%)</title><rect x="1.4286%" y="405" width="1.4286%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.6786%" y="415.50"></text></g><g><title>payload_test`nucliadb_node::services::writer::ShardWriterService::new (1 samples, 1.43%)</title><rect x="1.4286%" y="389" width="1.4286%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.6786%" y="399.50"></text></g><g><title>payload_test`nucliadb_node::services::config::ShardConfig::new (1 samples, 1.43%)</title><rect x="1.4286%" y="373" width="1.4286%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.6786%" y="383.50"></text></g><g><title>payload_test`std::fs::DirBuilder::create_dir_all (1 samples, 1.43%)</title><rect x="1.4286%" y="357" width="1.4286%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.6786%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mkdir (1 samples, 1.43%)</title><rect x="1.4286%" y="341" width="1.4286%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="1.6786%" y="351.50"></text></g><g><title>payload_test`nucliadb_node::services::writer::ShardWriterService::count (1 samples, 1.43%)</title><rect x="2.8571%" y="389" width="1.4286%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="3.1071%" y="399.50"></text></g><g><title>payload_test`&lt;nucliadb_fields_tantivy::writer::FieldWriterService as nucliadb_service_interface::service_interface::WriterChild&gt;::count (1 samples, 1.43%)</title><rect x="2.8571%" y="373" width="1.4286%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="3.1071%" y="383.50"></text></g><g><title>payload_test`tantivy::core::index::Index::reader (1 samples, 1.43%)</title><rect x="2.8571%" y="357" width="1.4286%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="3.1071%" y="367.50"></text></g><g><title>payload_test`tantivy::reader::IndexReaderBuilder::try_into (1 samples, 1.43%)</title><rect x="2.8571%" y="341" width="1.4286%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="3.1071%" y="351.50"></text></g><g><title>payload_test`tantivy::reader::InnerIndexReader::reload (1 samples, 1.43%)</title><rect x="2.8571%" y="325" width="1.4286%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="3.1071%" y="335.50"></text></g><g><title>payload_test`tantivy::reader::pool::Pool&lt;T&gt;::publish_new_generation (1 samples, 1.43%)</title><rect x="2.8571%" y="309" width="1.4286%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="3.1071%" y="319.50"></text></g><g><title>payload_test`tantivy::reader::pool::Queue&lt;T&gt;::push (1 samples, 1.43%)</title><rect x="2.8571%" y="293" width="1.4286%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="3.1071%" y="303.50"></text></g><g><title>payload_test`crossbeam_channel::waker::SyncWaker::notify (1 samples, 1.43%)</title><rect x="2.8571%" y="277" width="1.4286%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="3.1071%" y="287.50"></text></g><g><title>dyld`start (4 samples, 5.71%)</title><rect x="0.0000%" y="501" width="5.7143%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="511.50">dyld`st..</text></g><g><title>payload_test`main (3 samples, 4.29%)</title><rect x="1.4286%" y="485" width="4.2857%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="3"/><text x="1.6786%" y="495.50">paylo..</text></g><g><title>payload_test`std::rt::lang_start_internal (3 samples, 4.29%)</title><rect x="1.4286%" y="469" width="4.2857%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="3"/><text x="1.6786%" y="479.50">paylo..</text></g><g><title>payload_test`std::rt::lang_start::_{{closure}} (3 samples, 4.29%)</title><rect x="1.4286%" y="453" width="4.2857%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="3"/><text x="1.6786%" y="463.50">paylo..</text></g><g><title>payload_test`std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 4.29%)</title><rect x="1.4286%" y="437" width="4.2857%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="3"/><text x="1.6786%" y="447.50">paylo..</text></g><g><title>payload_test`payload_test::main (3 samples, 4.29%)</title><rect x="1.4286%" y="421" width="4.2857%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="3"/><text x="1.6786%" y="431.50">paylo..</text></g><g><title>payload_test`nucliadb_node::writer::NodeWriterService::set_resource (2 samples, 2.86%)</title><rect x="2.8571%" y="405" width="2.8571%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="2"/><text x="3.1071%" y="415.50">pa..</text></g><g><title>payload_test`nucliadb_node::services::writer::ShardWriterService::set_resource (1 samples, 1.43%)</title><rect x="4.2857%" y="389" width="1.4286%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="4.5357%" y="399.50"></text></g><g><title>payload_test`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.43%)</title><rect x="4.2857%" y="373" width="1.4286%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="4.5357%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 2.86%)</title><rect x="5.7143%" y="501" width="2.8571%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="2"/><text x="5.9643%" y="511.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (1 samples, 1.43%)</title><rect x="10.0000%" y="453" width="1.4286%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="10.2500%" y="463.50"></text></g><g><title>payload_test`futures_executor::enter::ENTERED::__getit (1 samples, 1.43%)</title><rect x="11.4286%" y="421" width="1.4286%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="11.6786%" y="431.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::acquire_lock (1 samples, 1.43%)</title><rect x="12.8571%" y="357" width="1.4286%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="13.1071%" y="367.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="12.8571%" y="341" width="1.4286%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="13.1071%" y="351.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="12.8571%" y="325" width="1.4286%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="13.1071%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="12.8571%" y="309" width="1.4286%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="13.1071%" y="319.50"></text></g><g><title>payload_test`std::fs::File::sync_all (1 samples, 1.43%)</title><rect x="14.2857%" y="325" width="1.4286%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="1"/><text x="14.5357%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.43%)</title><rect x="14.2857%" y="309" width="1.4286%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="14.5357%" y="319.50"></text></g><g><title>payload_test`std::io::Write::write_all (1 samples, 1.43%)</title><rect x="15.7143%" y="325" width="1.4286%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="1"/><text x="15.9643%" y="335.50"></text></g><g><title>payload_test`&lt;tempfile::file::NamedTempFile as std::io::Write&gt;::write (1 samples, 1.43%)</title><rect x="15.7143%" y="309" width="1.4286%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="1"/><text x="15.9643%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 1.43%)</title><rect x="15.7143%" y="293" width="1.4286%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="1"/><text x="15.9643%" y="303.50"></text></g><g><title>payload_test`tempfile::file::TempPath::persist (2 samples, 2.86%)</title><rect x="17.1429%" y="325" width="2.8571%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="2"/><text x="17.3929%" y="335.50">pa..</text></g><g><title>payload_test`tempfile::file::imp::unix::persist (2 samples, 2.86%)</title><rect x="17.1429%" y="309" width="2.8571%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="2"/><text x="17.3929%" y="319.50">pa..</text></g><g><title>libsystem_kernel.dylib`__rename (2 samples, 2.86%)</title><rect x="17.1429%" y="293" width="2.8571%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="2"/><text x="17.3929%" y="303.50">li..</text></g><g><title>payload_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 8.57%)</title><rect x="12.8571%" y="389" width="8.5714%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="6"/><text x="13.1071%" y="399.50">payload_test..</text></g><g><title>payload_test`tantivy::directory::managed_directory::ManagedDirectory::garbage_collect (6 samples, 8.57%)</title><rect x="12.8571%" y="373" width="8.5714%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="6"/><text x="13.1071%" y="383.50">payload_test..</text></g><g><title>payload_test`tantivy::directory::managed_directory::save_managed_paths (5 samples, 7.14%)</title><rect x="14.2857%" y="357" width="7.1429%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="5"/><text x="14.5357%" y="367.50">payload_te..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (5 samples, 7.14%)</title><rect x="14.2857%" y="341" width="7.1429%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="5"/><text x="14.5357%" y="351.50">payload_te..</text></g><g><title>payload_test`tempfile::util::create_helper (1 samples, 1.43%)</title><rect x="20.0000%" y="325" width="1.4286%" height="15" fill="rgb(213,116,39)" fg:x="14" fg:w="1"/><text x="20.2500%" y="335.50"></text></g><g><title>payload_test`tempfile::file::create_named (1 samples, 1.43%)</title><rect x="20.0000%" y="309" width="1.4286%" height="15" fill="rgb(222,207,29)" fg:x="14" fg:w="1"/><text x="20.2500%" y="319.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="20.0000%" y="293" width="1.4286%" height="15" fill="rgb(206,96,30)" fg:x="14" fg:w="1"/><text x="20.2500%" y="303.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="20.0000%" y="277" width="1.4286%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="20.2500%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="20.0000%" y="261" width="1.4286%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="20.2500%" y="271.50"></text></g><g><title>payload_test`tantivy::indexer::segment_updater::SegmentUpdater::purge_deletes (1 samples, 1.43%)</title><rect x="21.4286%" y="389" width="1.4286%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="21.6786%" y="399.50"></text></g><g><title>payload_test`tantivy::indexer::index_writer::advance_deletes (1 samples, 1.43%)</title><rect x="21.4286%" y="373" width="1.4286%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="21.6786%" y="383.50"></text></g><g><title>payload_test`tantivy::core::segment_reader::SegmentReader::open_with_custom_alive_set (1 samples, 1.43%)</title><rect x="21.4286%" y="357" width="1.4286%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="21.6786%" y="367.50"></text></g><g><title>payload_test`&lt;tantivy::directory::managed_directory::ManagedDirectory as tantivy::directory::directory::Directory&gt;::open_read (1 samples, 1.43%)</title><rect x="21.4286%" y="341" width="1.4286%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="21.6786%" y="351.50"></text></g><g><title>payload_test`tantivy::directory::directory::Directory::open_read (1 samples, 1.43%)</title><rect x="21.4286%" y="325" width="1.4286%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="21.6786%" y="335.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::get_file_handle (1 samples, 1.43%)</title><rect x="21.4286%" y="309" width="1.4286%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="21.6786%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`fstat (1 samples, 1.43%)</title><rect x="21.4286%" y="293" width="1.4286%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="21.6786%" y="303.50"></text></g><g><title>payload_test`tempfile::file::TempPath::persist (2 samples, 2.86%)</title><rect x="22.8571%" y="341" width="2.8571%" height="15" fill="rgb(251,118,11)" fg:x="16" fg:w="2"/><text x="23.1071%" y="351.50">pa..</text></g><g><title>payload_test`tempfile::file::imp::unix::persist (2 samples, 2.86%)</title><rect x="22.8571%" y="325" width="2.8571%" height="15" fill="rgb(217,147,25)" fg:x="16" fg:w="2"/><text x="23.1071%" y="335.50">pa..</text></g><g><title>libsystem_kernel.dylib`__rename (2 samples, 2.86%)</title><rect x="22.8571%" y="309" width="2.8571%" height="15" fill="rgb(247,81,37)" fg:x="16" fg:w="2"/><text x="23.1071%" y="319.50">li..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (3 samples, 4.29%)</title><rect x="22.8571%" y="357" width="4.2857%" height="15" fill="rgb(209,12,38)" fg:x="16" fg:w="3"/><text x="23.1071%" y="367.50">paylo..</text></g><g><title>payload_test`tempfile::util::create_helper (1 samples, 1.43%)</title><rect x="25.7143%" y="341" width="1.4286%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="1"/><text x="25.9643%" y="351.50"></text></g><g><title>payload_test`tempfile::file::create_named (1 samples, 1.43%)</title><rect x="25.7143%" y="325" width="1.4286%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="1"/><text x="25.9643%" y="335.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="25.7143%" y="309" width="1.4286%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="1"/><text x="25.9643%" y="319.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="25.7143%" y="293" width="1.4286%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="1"/><text x="25.9643%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="25.7143%" y="277" width="1.4286%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="1"/><text x="25.9643%" y="287.50"></text></g><g><title>payload_test`futures_executor::thread_pool::PoolState::work (11 samples, 15.71%)</title><rect x="12.8571%" y="421" width="15.7143%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="11"/><text x="13.1071%" y="431.50">payload_test`futures_exe..</text></g><g><title>payload_test`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 15.71%)</title><rect x="12.8571%" y="405" width="15.7143%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="11"/><text x="13.1071%" y="415.50">payload_test`&lt;core::futu..</text></g><g><title>payload_test`tantivy::indexer::segment_updater::SegmentUpdater::save_metas (4 samples, 5.71%)</title><rect x="22.8571%" y="389" width="5.7143%" height="15" fill="rgb(247,138,52)" fg:x="16" fg:w="4"/><text x="23.1071%" y="399.50">payload..</text></g><g><title>payload_test`tantivy::indexer::segment_updater::save_metas (4 samples, 5.71%)</title><rect x="22.8571%" y="373" width="5.7143%" height="15" fill="rgb(213,79,30)" fg:x="16" fg:w="4"/><text x="23.1071%" y="383.50">payload..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::sync_directory (1 samples, 1.43%)</title><rect x="27.1429%" y="357" width="1.4286%" height="15" fill="rgb(246,177,23)" fg:x="19" fg:w="1"/><text x="27.3929%" y="367.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="27.1429%" y="341" width="1.4286%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="1"/><text x="27.3929%" y="351.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="27.1429%" y="325" width="1.4286%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="1"/><text x="27.3929%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="27.1429%" y="309" width="1.4286%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="1"/><text x="27.3929%" y="319.50"></text></g><g><title>payload_test`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 2.86%)</title><rect x="28.5714%" y="389" width="2.8571%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="2"/><text x="28.8214%" y="399.50">pa..</text></g><g><title>payload_test`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2 samples, 2.86%)</title><rect x="28.5714%" y="373" width="2.8571%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="2"/><text x="28.8214%" y="383.50">pa..</text></g><g><title>payload_test`&lt;nucliadb_fields_tantivy::writer::FieldWriterService as nucliadb_service_interface::service_interface::WriterChild&gt;::set_resource (1 samples, 1.43%)</title><rect x="31.4286%" y="309" width="1.4286%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="31.6786%" y="319.50"></text></g><g><title>payload_test`tantivy::indexer::index_writer::IndexWriter::commit (1 samples, 1.43%)</title><rect x="31.4286%" y="293" width="1.4286%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="31.6786%" y="303.50"></text></g><g><title>payload_test`tantivy::indexer::index_writer::IndexWriter::prepare_commit (1 samples, 1.43%)</title><rect x="31.4286%" y="277" width="1.4286%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="31.6786%" y="287.50"></text></g><g><title>payload_test`crossbeam_channel::flavors::array::Channel&lt;T&gt;::with_capacity (1 samples, 1.43%)</title><rect x="31.4286%" y="261" width="1.4286%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="1"/><text x="31.6786%" y="271.50"></text></g><g><title>payload_test`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 1.43%)</title><rect x="31.4286%" y="245" width="1.4286%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="1"/><text x="31.6786%" y="255.50"></text></g><g><title>payload_test`nucliadb_node::telemetry::run_with_telemetry (2 samples, 2.86%)</title><rect x="31.4286%" y="341" width="2.8571%" height="15" fill="rgb(242,79,21)" fg:x="22" fg:w="2"/><text x="31.6786%" y="351.50">pa..</text></g><g><title>payload_test`tracing::span::Span::in_scope (2 samples, 2.86%)</title><rect x="31.4286%" y="325" width="2.8571%" height="15" fill="rgb(211,96,35)" fg:x="22" fg:w="2"/><text x="31.6786%" y="335.50">pa..</text></g><g><title>payload_test`&lt;nucliadb_paragraphs_tantivy::writer::ParagraphWriterService as nucliadb_service_interface::service_interface::WriterChild&gt;::set_resource (1 samples, 1.43%)</title><rect x="32.8571%" y="309" width="1.4286%" height="15" fill="rgb(253,215,40)" fg:x="23" fg:w="1"/><text x="33.1071%" y="319.50"></text></g><g><title>payload_test`std::sync::once::Once::call_inner (1 samples, 1.43%)</title><rect x="32.8571%" y="293" width="1.4286%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="1"/><text x="33.1071%" y="303.50"></text></g><g><title>payload_test`std::sync::once::Once::call_once::_{{closure}} (1 samples, 1.43%)</title><rect x="32.8571%" y="277" width="1.4286%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="1"/><text x="33.1071%" y="287.50"></text></g><g><title>payload_test`regex::re_unicode::Regex::new (1 samples, 1.43%)</title><rect x="32.8571%" y="261" width="1.4286%" height="15" fill="rgb(235,213,38)" fg:x="23" fg:w="1"/><text x="33.1071%" y="271.50"></text></g><g><title>payload_test`regex_syntax::parser::ParserBuilder::new (1 samples, 1.43%)</title><rect x="32.8571%" y="245" width="1.4286%" height="15" fill="rgb(237,122,38)" fg:x="23" fg:w="1"/><text x="33.1071%" y="255.50"></text></g><g><title>payload_test`tantivy::core::index::Index::writer_with_num_threads (1 samples, 1.43%)</title><rect x="34.2857%" y="293" width="1.4286%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="1"/><text x="34.5357%" y="303.50"></text></g><g><title>payload_test`tantivy::indexer::index_writer::IndexWriter::new (1 samples, 1.43%)</title><rect x="34.2857%" y="277" width="1.4286%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="1"/><text x="34.5357%" y="287.50"></text></g><g><title>payload_test`tantivy::indexer::segment_updater::SegmentUpdater::create (1 samples, 1.43%)</title><rect x="34.2857%" y="261" width="1.4286%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="34.5357%" y="271.50"></text></g><g><title>payload_test`futures_executor::thread_pool::ThreadPoolBuilder::create (1 samples, 1.43%)</title><rect x="34.2857%" y="245" width="1.4286%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="34.5357%" y="255.50"></text></g><g><title>payload_test`std::thread::Builder::spawn (1 samples, 1.43%)</title><rect x="34.2857%" y="229" width="1.4286%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="34.5357%" y="239.50"></text></g><g><title>payload_test`std::sys::unix::thread::Thread::new (1 samples, 1.43%)</title><rect x="34.2857%" y="213" width="1.4286%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="34.5357%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 1.43%)</title><rect x="34.2857%" y="197" width="1.4286%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="34.5357%" y="207.50"></text></g><g><title>payload_test`tantivy::core::index::IndexBuilder::create_in_dir (1 samples, 1.43%)</title><rect x="35.7143%" y="293" width="1.4286%" height="15" fill="rgb(230,116,27)" fg:x="25" fg:w="1"/><text x="35.9643%" y="303.50"></text></g><g><title>payload_test`tantivy::indexer::segment_updater::save_new_metas (1 samples, 1.43%)</title><rect x="35.7143%" y="277" width="1.4286%" height="15" fill="rgb(228,99,48)" fg:x="25" fg:w="1"/><text x="35.9643%" y="287.50"></text></g><g><title>payload_test`tantivy::indexer::segment_updater::save_metas (1 samples, 1.43%)</title><rect x="35.7143%" y="261" width="1.4286%" height="15" fill="rgb(253,11,6)" fg:x="25" fg:w="1"/><text x="35.9643%" y="271.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (1 samples, 1.43%)</title><rect x="35.7143%" y="245" width="1.4286%" height="15" fill="rgb(247,143,39)" fg:x="25" fg:w="1"/><text x="35.9643%" y="255.50"></text></g><g><title>payload_test`tempfile::util::create_helper (1 samples, 1.43%)</title><rect x="35.7143%" y="229" width="1.4286%" height="15" fill="rgb(236,97,10)" fg:x="25" fg:w="1"/><text x="35.9643%" y="239.50"></text></g><g><title>payload_test`tempfile::file::create_named (1 samples, 1.43%)</title><rect x="35.7143%" y="213" width="1.4286%" height="15" fill="rgb(233,208,19)" fg:x="25" fg:w="1"/><text x="35.9643%" y="223.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="35.7143%" y="197" width="1.4286%" height="15" fill="rgb(216,164,2)" fg:x="25" fg:w="1"/><text x="35.9643%" y="207.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="35.7143%" y="181" width="1.4286%" height="15" fill="rgb(220,129,5)" fg:x="25" fg:w="1"/><text x="35.9643%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="35.7143%" y="165" width="1.4286%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="1"/><text x="35.9643%" y="175.50"></text></g><g><title>payload_test`nucliadb_services::fields::create_writer (3 samples, 4.29%)</title><rect x="34.2857%" y="341" width="4.2857%" height="15" fill="rgb(242,107,0)" fg:x="24" fg:w="3"/><text x="34.5357%" y="351.50">paylo..</text></g><g><title>payload_test`nucliadb_fields_tantivy::writer::FieldWriterService::new (3 samples, 4.29%)</title><rect x="34.2857%" y="325" width="4.2857%" height="15" fill="rgb(251,28,31)" fg:x="24" fg:w="3"/><text x="34.5357%" y="335.50">paylo..</text></g><g><title>payload_test`nucliadb_fields_tantivy::writer::FieldWriterService::new_inner (3 samples, 4.29%)</title><rect x="34.2857%" y="309" width="4.2857%" height="15" fill="rgb(233,223,10)" fg:x="24" fg:w="3"/><text x="34.5357%" y="319.50">paylo..</text></g><g><title>payload_test`tantivy::schema::schema::SchemaBuilder::add_text_field (1 samples, 1.43%)</title><rect x="37.1429%" y="293" width="1.4286%" height="15" fill="rgb(215,21,27)" fg:x="26" fg:w="1"/><text x="37.3929%" y="303.50"></text></g><g><title>payload_test`nucliadb_services::fields::open_reader (1 samples, 1.43%)</title><rect x="38.5714%" y="341" width="1.4286%" height="15" fill="rgb(232,23,21)" fg:x="27" fg:w="1"/><text x="38.8214%" y="351.50"></text></g><g><title>payload_test`nucliadb_fields_tantivy::reader::FieldReaderService::open (1 samples, 1.43%)</title><rect x="38.5714%" y="325" width="1.4286%" height="15" fill="rgb(244,5,23)" fg:x="27" fg:w="1"/><text x="38.8214%" y="335.50"></text></g><g><title>payload_test`nucliadb_fields_tantivy::reader::FieldReaderService::open_inner (1 samples, 1.43%)</title><rect x="38.5714%" y="309" width="1.4286%" height="15" fill="rgb(226,81,46)" fg:x="27" fg:w="1"/><text x="38.8214%" y="319.50"></text></g><g><title>payload_test`tantivy::reader::IndexReaderBuilder::try_into (1 samples, 1.43%)</title><rect x="38.5714%" y="293" width="1.4286%" height="15" fill="rgb(247,70,30)" fg:x="27" fg:w="1"/><text x="38.8214%" y="303.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::watch (1 samples, 1.43%)</title><rect x="38.5714%" y="277" width="1.4286%" height="15" fill="rgb(212,68,19)" fg:x="27" fg:w="1"/><text x="38.8214%" y="287.50"></text></g><g><title>payload_test`tantivy::directory::file_watcher::FileWatcher::watch (1 samples, 1.43%)</title><rect x="38.5714%" y="261" width="1.4286%" height="15" fill="rgb(240,187,13)" fg:x="27" fg:w="1"/><text x="38.8214%" y="271.50"></text></g><g><title>payload_test`std::thread::Builder::spawn (1 samples, 1.43%)</title><rect x="38.5714%" y="245" width="1.4286%" height="15" fill="rgb(223,113,26)" fg:x="27" fg:w="1"/><text x="38.8214%" y="255.50"></text></g><g><title>payload_test`std::sys::unix::thread::Thread::new (1 samples, 1.43%)</title><rect x="38.5714%" y="229" width="1.4286%" height="15" fill="rgb(206,192,2)" fg:x="27" fg:w="1"/><text x="38.8214%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (1 samples, 1.43%)</title><rect x="38.5714%" y="213" width="1.4286%" height="15" fill="rgb(241,108,4)" fg:x="27" fg:w="1"/><text x="38.8214%" y="223.50"></text></g><g><title>payload_test`heed::env::EnvOpenOptions::open (1 samples, 1.43%)</title><rect x="40.0000%" y="309" width="1.4286%" height="15" fill="rgb(247,173,49)" fg:x="28" fg:w="1"/><text x="40.2500%" y="319.50"></text></g><g><title>payload_test`nucliadb_services::relations::create_writer (2 samples, 2.86%)</title><rect x="40.0000%" y="341" width="2.8571%" height="15" fill="rgb(224,114,35)" fg:x="28" fg:w="2"/><text x="40.2500%" y="351.50">pa..</text></g><g><title>payload_test`nucliadb_relations::service::writer::RelationsWriterService::new (2 samples, 2.86%)</title><rect x="40.0000%" y="325" width="2.8571%" height="15" fill="rgb(245,159,27)" fg:x="28" fg:w="2"/><text x="40.2500%" y="335.50">pa..</text></g><g><title>payload_test`nucliadb_relations::storage_system::StorageSystem::create (1 samples, 1.43%)</title><rect x="41.4286%" y="309" width="1.4286%" height="15" fill="rgb(245,172,44)" fg:x="29" fg:w="1"/><text x="41.6786%" y="319.50"></text></g><g><title>payload_test`heed::env::Env::create_database (1 samples, 1.43%)</title><rect x="41.4286%" y="293" width="1.4286%" height="15" fill="rgb(236,23,11)" fg:x="29" fg:w="1"/><text x="41.6786%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`fsync (1 samples, 1.43%)</title><rect x="41.4286%" y="277" width="1.4286%" height="15" fill="rgb(205,117,38)" fg:x="29" fg:w="1"/><text x="41.6786%" y="287.50"></text></g><g><title>payload_test`&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (9 samples, 12.86%)</title><rect x="31.4286%" y="389" width="12.8571%" height="15" fill="rgb(237,72,25)" fg:x="22" fg:w="9"/><text x="31.6786%" y="399.50">payload_test`&lt;rayon..</text></g><g><title>payload_test`std::panicking::try (9 samples, 12.86%)</title><rect x="31.4286%" y="373" width="12.8571%" height="15" fill="rgb(244,70,9)" fg:x="22" fg:w="9"/><text x="31.6786%" y="383.50">payload_test`std::p..</text></g><g><title>payload_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 12.86%)</title><rect x="31.4286%" y="357" width="12.8571%" height="15" fill="rgb(217,125,39)" fg:x="22" fg:w="9"/><text x="31.6786%" y="367.50">payload_test`&lt;core:..</text></g><g><title>payload_test`nucliadb_services::vectors::create_writer (1 samples, 1.43%)</title><rect x="42.8571%" y="341" width="1.4286%" height="15" fill="rgb(235,36,10)" fg:x="30" fg:w="1"/><text x="43.1071%" y="351.50"></text></g><g><title>payload_test`nucliadb_vectors2::service::writer::VectorWriterService::new (1 samples, 1.43%)</title><rect x="42.8571%" y="325" width="1.4286%" height="15" fill="rgb(251,123,47)" fg:x="30" fg:w="1"/><text x="43.1071%" y="335.50"></text></g><g><title>payload_test`nucliadb_vectors2::data_point_provider::Index::writer (1 samples, 1.43%)</title><rect x="42.8571%" y="309" width="1.4286%" height="15" fill="rgb(221,13,13)" fg:x="30" fg:w="1"/><text x="43.1071%" y="319.50"></text></g><g><title>payload_test`nucliadb_vectors2::data_point_provider::disk_handler::initialize_disk (1 samples, 1.43%)</title><rect x="42.8571%" y="293" width="1.4286%" height="15" fill="rgb(238,131,9)" fg:x="30" fg:w="1"/><text x="43.1071%" y="303.50"></text></g><g><title>payload_test`std::path::Path::_join (1 samples, 1.43%)</title><rect x="42.8571%" y="277" width="1.4286%" height="15" fill="rgb(211,50,8)" fg:x="30" fg:w="1"/><text x="43.1071%" y="287.50"></text></g><g><title>payload_test`nucliadb_vectors2::data_point::DataPoint::new (1 samples, 1.43%)</title><rect x="44.2857%" y="229" width="1.4286%" height="15" fill="rgb(245,182,24)" fg:x="31" fg:w="1"/><text x="44.5357%" y="239.50"></text></g><g><title>payload_test`nucliadb_vectors2::disk::key_value::create_key_value (1 samples, 1.43%)</title><rect x="44.2857%" y="213" width="1.4286%" height="15" fill="rgb(242,14,37)" fg:x="31" fg:w="1"/><text x="44.5357%" y="223.50"></text></g><g><title>payload_test`nucliadb_vectors2::data_point::node::Node::serialize_into (1 samples, 1.43%)</title><rect x="44.2857%" y="197" width="1.4286%" height="15" fill="rgb(246,228,12)" fg:x="31" fg:w="1"/><text x="44.5357%" y="207.50"></text></g><g><title>payload_test`std::io::Write::write_all (1 samples, 1.43%)</title><rect x="44.2857%" y="181" width="1.4286%" height="15" fill="rgb(213,55,15)" fg:x="31" fg:w="1"/><text x="44.5357%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 1.43%)</title><rect x="44.2857%" y="165" width="1.4286%" height="15" fill="rgb(209,9,3)" fg:x="31" fg:w="1"/><text x="44.5357%" y="175.50"></text></g><g><title>payload_test`nucliadb_node::telemetry::run_with_telemetry (2 samples, 2.86%)</title><rect x="44.2857%" y="277" width="2.8571%" height="15" fill="rgb(230,59,30)" fg:x="31" fg:w="2"/><text x="44.5357%" y="287.50">pa..</text></g><g><title>payload_test`tracing::span::Span::in_scope (2 samples, 2.86%)</title><rect x="44.2857%" y="261" width="2.8571%" height="15" fill="rgb(209,121,21)" fg:x="31" fg:w="2"/><text x="44.5357%" y="271.50">pa..</text></g><g><title>payload_test`&lt;nucliadb_vectors2::service::writer::VectorWriterService as nucliadb_service_interface::service_interface::WriterChild&gt;::set_resource (2 samples, 2.86%)</title><rect x="44.2857%" y="245" width="2.8571%" height="15" fill="rgb(220,109,13)" fg:x="31" fg:w="2"/><text x="44.5357%" y="255.50">pa..</text></g><g><title>payload_test`nucliadb_vectors2::data_point_provider::Index::get_elock (1 samples, 1.43%)</title><rect x="45.7143%" y="229" width="1.4286%" height="15" fill="rgb(232,18,1)" fg:x="32" fg:w="1"/><text x="45.9643%" y="239.50"></text></g><g><title>payload_test`nucliadb_vectors2::data_point_provider::disk_handler::exclusive_lock (1 samples, 1.43%)</title><rect x="45.7143%" y="213" width="1.4286%" height="15" fill="rgb(215,41,42)" fg:x="32" fg:w="1"/><text x="45.9643%" y="223.50"></text></g><g><title>payload_test`nucliadb_vectors2::data_point_provider::disk_handler::Lock::open_lock (1 samples, 1.43%)</title><rect x="45.7143%" y="197" width="1.4286%" height="15" fill="rgb(224,123,36)" fg:x="32" fg:w="1"/><text x="45.9643%" y="207.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="45.7143%" y="181" width="1.4286%" height="15" fill="rgb(240,125,3)" fg:x="32" fg:w="1"/><text x="45.9643%" y="191.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="45.7143%" y="165" width="1.4286%" height="15" fill="rgb(205,98,50)" fg:x="32" fg:w="1"/><text x="45.9643%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="45.7143%" y="149" width="1.4286%" height="15" fill="rgb(205,185,37)" fg:x="32" fg:w="1"/><text x="45.9643%" y="159.50"></text></g><g><title>payload_test`tantivy::core::index::Index::writer_with_num_threads (1 samples, 1.43%)</title><rect x="47.1429%" y="229" width="1.4286%" height="15" fill="rgb(238,207,15)" fg:x="33" fg:w="1"/><text x="47.3929%" y="239.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::acquire_lock (1 samples, 1.43%)</title><rect x="47.1429%" y="213" width="1.4286%" height="15" fill="rgb(213,199,42)" fg:x="33" fg:w="1"/><text x="47.3929%" y="223.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="47.1429%" y="197" width="1.4286%" height="15" fill="rgb(235,201,11)" fg:x="33" fg:w="1"/><text x="47.3929%" y="207.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="47.1429%" y="181" width="1.4286%" height="15" fill="rgb(207,46,11)" fg:x="33" fg:w="1"/><text x="47.3929%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="47.1429%" y="165" width="1.4286%" height="15" fill="rgb(241,35,35)" fg:x="33" fg:w="1"/><text x="47.3929%" y="175.50"></text></g><g><title>payload_test`tantivy::core::index::IndexBuilder::create_in_dir (2 samples, 2.86%)</title><rect x="48.5714%" y="229" width="2.8571%" height="15" fill="rgb(243,32,47)" fg:x="34" fg:w="2"/><text x="48.8214%" y="239.50">pa..</text></g><g><title>payload_test`tantivy::indexer::segment_updater::save_new_metas (2 samples, 2.86%)</title><rect x="48.5714%" y="213" width="2.8571%" height="15" fill="rgb(247,202,23)" fg:x="34" fg:w="2"/><text x="48.8214%" y="223.50">pa..</text></g><g><title>payload_test`tantivy::indexer::segment_updater::save_metas (2 samples, 2.86%)</title><rect x="48.5714%" y="197" width="2.8571%" height="15" fill="rgb(219,102,11)" fg:x="34" fg:w="2"/><text x="48.8214%" y="207.50">pa..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (2 samples, 2.86%)</title><rect x="48.5714%" y="181" width="2.8571%" height="15" fill="rgb(243,110,44)" fg:x="34" fg:w="2"/><text x="48.8214%" y="191.50">pa..</text></g><g><title>payload_test`tempfile::util::create_helper (2 samples, 2.86%)</title><rect x="48.5714%" y="165" width="2.8571%" height="15" fill="rgb(222,74,54)" fg:x="34" fg:w="2"/><text x="48.8214%" y="175.50">pa..</text></g><g><title>payload_test`tempfile::file::create_named (2 samples, 2.86%)</title><rect x="48.5714%" y="149" width="2.8571%" height="15" fill="rgb(216,99,12)" fg:x="34" fg:w="2"/><text x="48.8214%" y="159.50">pa..</text></g><g><title>payload_test`std::fs::OpenOptions::_open (2 samples, 2.86%)</title><rect x="48.5714%" y="133" width="2.8571%" height="15" fill="rgb(226,22,26)" fg:x="34" fg:w="2"/><text x="48.8214%" y="143.50">pa..</text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (2 samples, 2.86%)</title><rect x="48.5714%" y="117" width="2.8571%" height="15" fill="rgb(217,163,10)" fg:x="34" fg:w="2"/><text x="48.8214%" y="127.50">pa..</text></g><g><title>libsystem_kernel.dylib`__open (2 samples, 2.86%)</title><rect x="48.5714%" y="101" width="2.8571%" height="15" fill="rgb(213,25,53)" fg:x="34" fg:w="2"/><text x="48.8214%" y="111.50">li..</text></g><g><title>payload_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 8.57%)</title><rect x="44.2857%" y="373" width="8.5714%" height="15" fill="rgb(252,105,26)" fg:x="31" fg:w="6"/><text x="44.5357%" y="383.50">payload_test..</text></g><g><title>payload_test`rayon_core::scope::ScopeBase::complete (6 samples, 8.57%)</title><rect x="44.2857%" y="357" width="8.5714%" height="15" fill="rgb(220,39,43)" fg:x="31" fg:w="6"/><text x="44.5357%" y="367.50">payload_test..</text></g><g><title>payload_test`rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 8.57%)</title><rect x="44.2857%" y="341" width="8.5714%" height="15" fill="rgb(229,68,48)" fg:x="31" fg:w="6"/><text x="44.5357%" y="351.50">payload_test..</text></g><g><title>payload_test`&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (6 samples, 8.57%)</title><rect x="44.2857%" y="325" width="8.5714%" height="15" fill="rgb(252,8,32)" fg:x="31" fg:w="6"/><text x="44.5357%" y="335.50">payload_test..</text></g><g><title>payload_test`std::panicking::try (6 samples, 8.57%)</title><rect x="44.2857%" y="309" width="8.5714%" height="15" fill="rgb(223,20,43)" fg:x="31" fg:w="6"/><text x="44.5357%" y="319.50">payload_test..</text></g><g><title>payload_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 8.57%)</title><rect x="44.2857%" y="293" width="8.5714%" height="15" fill="rgb(229,81,49)" fg:x="31" fg:w="6"/><text x="44.5357%" y="303.50">payload_test..</text></g><g><title>payload_test`nucliadb_services::paragraphs::create_writer (4 samples, 5.71%)</title><rect x="47.1429%" y="277" width="5.7143%" height="15" fill="rgb(236,28,36)" fg:x="33" fg:w="4"/><text x="47.3929%" y="287.50">payload..</text></g><g><title>payload_test`nucliadb_paragraphs_tantivy::writer::ParagraphWriterService::new (4 samples, 5.71%)</title><rect x="47.1429%" y="261" width="5.7143%" height="15" fill="rgb(249,185,26)" fg:x="33" fg:w="4"/><text x="47.3929%" y="271.50">payload..</text></g><g><title>payload_test`nucliadb_paragraphs_tantivy::writer::ParagraphWriterService::new_inner (4 samples, 5.71%)</title><rect x="47.1429%" y="245" width="5.7143%" height="15" fill="rgb(249,174,33)" fg:x="33" fg:w="4"/><text x="47.3929%" y="255.50">payload..</text></g><g><title>payload_test`tantivy::schema::schema::SchemaBuilder::add_text_field (1 samples, 1.43%)</title><rect x="51.4286%" y="229" width="1.4286%" height="15" fill="rgb(233,201,37)" fg:x="36" fg:w="1"/><text x="51.6786%" y="239.50"></text></g><g><title>payload_test`rayon_core::registry::ThreadBuilder::run (18 samples, 25.71%)</title><rect x="28.5714%" y="421" width="25.7143%" height="15" fill="rgb(221,78,26)" fg:x="20" fg:w="18"/><text x="28.8214%" y="431.50">payload_test`rayon_core::registry::Thread..</text></g><g><title>payload_test`rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 25.71%)</title><rect x="28.5714%" y="405" width="25.7143%" height="15" fill="rgb(250,127,30)" fg:x="20" fg:w="18"/><text x="28.8214%" y="415.50">payload_test`rayon_core::registry::Worker..</text></g><g><title>payload_test`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7 samples, 10.00%)</title><rect x="44.2857%" y="389" width="10.0000%" height="15" fill="rgb(230,49,44)" fg:x="31" fg:w="7"/><text x="44.5357%" y="399.50">payload_test`&lt;..</text></g><g><title>payload_test`nucliadb_node::services::reader::ShardReaderService::open (1 samples, 1.43%)</title><rect x="52.8571%" y="373" width="1.4286%" height="15" fill="rgb(229,67,23)" fg:x="37" fg:w="1"/><text x="53.1071%" y="383.50"></text></g><g><title>payload_test`rayon_core::registry::in_worker (1 samples, 1.43%)</title><rect x="52.8571%" y="357" width="1.4286%" height="15" fill="rgb(249,83,47)" fg:x="37" fg:w="1"/><text x="53.1071%" y="367.50"></text></g><g><title>payload_test`rayon_core::scope::ScopeBase::complete (1 samples, 1.43%)</title><rect x="52.8571%" y="341" width="1.4286%" height="15" fill="rgb(215,43,3)" fg:x="37" fg:w="1"/><text x="53.1071%" y="351.50"></text></g><g><title>payload_test`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 1.43%)</title><rect x="52.8571%" y="325" width="1.4286%" height="15" fill="rgb(238,154,13)" fg:x="37" fg:w="1"/><text x="53.1071%" y="335.50"></text></g><g><title>payload_test`&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (1 samples, 1.43%)</title><rect x="52.8571%" y="309" width="1.4286%" height="15" fill="rgb(219,56,2)" fg:x="37" fg:w="1"/><text x="53.1071%" y="319.50"></text></g><g><title>payload_test`std::panicking::try (1 samples, 1.43%)</title><rect x="52.8571%" y="293" width="1.4286%" height="15" fill="rgb(233,0,4)" fg:x="37" fg:w="1"/><text x="53.1071%" y="303.50"></text></g><g><title>payload_test`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 1.43%)</title><rect x="52.8571%" y="277" width="1.4286%" height="15" fill="rgb(235,30,7)" fg:x="37" fg:w="1"/><text x="53.1071%" y="287.50"></text></g><g><title>payload_test`nucliadb_services::paragraphs::open_reader (1 samples, 1.43%)</title><rect x="52.8571%" y="261" width="1.4286%" height="15" fill="rgb(250,79,13)" fg:x="37" fg:w="1"/><text x="53.1071%" y="271.50"></text></g><g><title>payload_test`nucliadb_paragraphs_tantivy::reader::ParagraphReaderService::open (1 samples, 1.43%)</title><rect x="52.8571%" y="245" width="1.4286%" height="15" fill="rgb(211,146,34)" fg:x="37" fg:w="1"/><text x="53.1071%" y="255.50"></text></g><g><title>payload_test`nucliadb_paragraphs_tantivy::reader::ParagraphReaderService::open_inner (1 samples, 1.43%)</title><rect x="52.8571%" y="229" width="1.4286%" height="15" fill="rgb(228,22,38)" fg:x="37" fg:w="1"/><text x="53.1071%" y="239.50"></text></g><g><title>payload_test`tantivy::reader::IndexReaderBuilder::try_into (1 samples, 1.43%)</title><rect x="52.8571%" y="213" width="1.4286%" height="15" fill="rgb(235,168,5)" fg:x="37" fg:w="1"/><text x="53.1071%" y="223.50"></text></g><g><title>payload_test`tantivy::reader::InnerIndexReader::reload (1 samples, 1.43%)</title><rect x="52.8571%" y="197" width="1.4286%" height="15" fill="rgb(221,155,16)" fg:x="37" fg:w="1"/><text x="53.1071%" y="207.50"></text></g><g><title>payload_test`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 1.43%)</title><rect x="52.8571%" y="181" width="1.4286%" height="15" fill="rgb(215,215,53)" fg:x="37" fg:w="1"/><text x="53.1071%" y="191.50"></text></g><g><title>payload_test`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 1.43%)</title><rect x="52.8571%" y="165" width="1.4286%" height="15" fill="rgb(223,4,10)" fg:x="37" fg:w="1"/><text x="53.1071%" y="175.50"></text></g><g><title>payload_test`tantivy::core::segment_reader::SegmentReader::open_with_custom_alive_set (1 samples, 1.43%)</title><rect x="52.8571%" y="149" width="1.4286%" height="15" fill="rgb(234,103,6)" fg:x="37" fg:w="1"/><text x="53.1071%" y="159.50"></text></g><g><title>payload_test`tantivy::core::segment::Segment::open_read (1 samples, 1.43%)</title><rect x="52.8571%" y="133" width="1.4286%" height="15" fill="rgb(227,97,0)" fg:x="37" fg:w="1"/><text x="53.1071%" y="143.50"></text></g><g><title>payload_test`&lt;tantivy::directory::managed_directory::ManagedDirectory as tantivy::directory::directory::Directory&gt;::open_read (1 samples, 1.43%)</title><rect x="52.8571%" y="117" width="1.4286%" height="15" fill="rgb(234,150,53)" fg:x="37" fg:w="1"/><text x="53.1071%" y="127.50"></text></g><g><title>payload_test`tantivy::directory::directory::Directory::open_read (1 samples, 1.43%)</title><rect x="52.8571%" y="101" width="1.4286%" height="15" fill="rgb(228,201,54)" fg:x="37" fg:w="1"/><text x="53.1071%" y="111.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::get_file_handle (1 samples, 1.43%)</title><rect x="52.8571%" y="85" width="1.4286%" height="15" fill="rgb(222,22,37)" fg:x="37" fg:w="1"/><text x="53.1071%" y="95.50"></text></g><g><title>payload_test`memmap2::Mmap::map (1 samples, 1.43%)</title><rect x="52.8571%" y="69" width="1.4286%" height="15" fill="rgb(237,53,32)" fg:x="37" fg:w="1"/><text x="53.1071%" y="79.50"></text></g><g><title>payload_test`memmap2::os::MmapInner::map (1 samples, 1.43%)</title><rect x="52.8571%" y="53" width="1.4286%" height="15" fill="rgb(233,25,53)" fg:x="37" fg:w="1"/><text x="53.1071%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 1.43%)</title><rect x="52.8571%" y="37" width="1.4286%" height="15" fill="rgb(210,40,34)" fg:x="37" fg:w="1"/><text x="53.1071%" y="47.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::open_write (1 samples, 1.43%)</title><rect x="54.2857%" y="357" width="1.4286%" height="15" fill="rgb(241,220,44)" fg:x="38" fg:w="1"/><text x="54.5357%" y="367.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="54.2857%" y="341" width="1.4286%" height="15" fill="rgb(235,28,35)" fg:x="38" fg:w="1"/><text x="54.5357%" y="351.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="54.2857%" y="325" width="1.4286%" height="15" fill="rgb(210,56,17)" fg:x="38" fg:w="1"/><text x="54.5357%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="54.2857%" y="309" width="1.4286%" height="15" fill="rgb(224,130,29)" fg:x="38" fg:w="1"/><text x="54.5357%" y="319.50"></text></g><g><title>payload_test`tantivy::core::segment::Segment::open_write (3 samples, 4.29%)</title><rect x="54.2857%" y="389" width="4.2857%" height="15" fill="rgb(235,212,8)" fg:x="38" fg:w="3"/><text x="54.5357%" y="399.50">paylo..</text></g><g><title>payload_test`&lt;tantivy::directory::managed_directory::ManagedDirectory as tantivy::directory::directory::Directory&gt;::open_write (3 samples, 4.29%)</title><rect x="54.2857%" y="373" width="4.2857%" height="15" fill="rgb(223,33,50)" fg:x="38" fg:w="3"/><text x="54.5357%" y="383.50">paylo..</text></g><g><title>payload_test`tantivy::directory::managed_directory::ManagedDirectory::register_file_as_managed (2 samples, 2.86%)</title><rect x="55.7143%" y="357" width="2.8571%" height="15" fill="rgb(219,149,13)" fg:x="39" fg:w="2"/><text x="55.9643%" y="367.50">pa..</text></g><g><title>payload_test`tantivy::directory::managed_directory::save_managed_paths (2 samples, 2.86%)</title><rect x="55.7143%" y="341" width="2.8571%" height="15" fill="rgb(250,156,29)" fg:x="39" fg:w="2"/><text x="55.9643%" y="351.50">pa..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (2 samples, 2.86%)</title><rect x="55.7143%" y="325" width="2.8571%" height="15" fill="rgb(216,193,19)" fg:x="39" fg:w="2"/><text x="55.9643%" y="335.50">pa..</text></g><g><title>payload_test`tempfile::file::TempPath::persist (2 samples, 2.86%)</title><rect x="55.7143%" y="309" width="2.8571%" height="15" fill="rgb(216,135,14)" fg:x="39" fg:w="2"/><text x="55.9643%" y="319.50">pa..</text></g><g><title>payload_test`tempfile::file::imp::unix::persist (2 samples, 2.86%)</title><rect x="55.7143%" y="293" width="2.8571%" height="15" fill="rgb(241,47,5)" fg:x="39" fg:w="2"/><text x="55.9643%" y="303.50">pa..</text></g><g><title>libsystem_kernel.dylib`__rename (2 samples, 2.86%)</title><rect x="55.7143%" y="277" width="2.8571%" height="15" fill="rgb(233,42,35)" fg:x="39" fg:w="2"/><text x="55.9643%" y="287.50">li..</text></g><g><title>payload_test`std::io::Write::write_all (1 samples, 1.43%)</title><rect x="58.5714%" y="341" width="1.4286%" height="15" fill="rgb(231,13,6)" fg:x="41" fg:w="1"/><text x="58.8214%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 1.43%)</title><rect x="58.5714%" y="325" width="1.4286%" height="15" fill="rgb(207,181,40)" fg:x="41" fg:w="1"/><text x="58.8214%" y="335.50"></text></g><g><title>payload_test`tantivy::fieldnorm::writer::FieldNormsWriter::serialize (2 samples, 2.86%)</title><rect x="58.5714%" y="389" width="2.8571%" height="15" fill="rgb(254,173,49)" fg:x="41" fg:w="2"/><text x="58.8214%" y="399.50">pa..</text></g><g><title>payload_test`tantivy::directory::composite_file::CompositeWrite&lt;W&gt;::close (2 samples, 2.86%)</title><rect x="58.5714%" y="373" width="2.8571%" height="15" fill="rgb(221,1,38)" fg:x="41" fg:w="2"/><text x="58.8214%" y="383.50">pa..</text></g><g><title>payload_test`&lt;tantivy::directory::footer::FooterProxy&lt;W&gt; as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (2 samples, 2.86%)</title><rect x="58.5714%" y="357" width="2.8571%" height="15" fill="rgb(206,124,46)" fg:x="41" fg:w="2"/><text x="58.8214%" y="367.50">pa..</text></g><g><title>payload_test`tantivy_common::writer::TerminatingWrite::terminate (1 samples, 1.43%)</title><rect x="60.0000%" y="341" width="1.4286%" height="15" fill="rgb(249,21,11)" fg:x="42" fg:w="1"/><text x="60.2500%" y="351.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::SafeFileWriter as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (1 samples, 1.43%)</title><rect x="60.0000%" y="325" width="1.4286%" height="15" fill="rgb(222,201,40)" fg:x="42" fg:w="1"/><text x="60.2500%" y="335.50"></text></g><g><title>payload_test`std::fs::File::sync_all (1 samples, 1.43%)</title><rect x="60.0000%" y="309" width="1.4286%" height="15" fill="rgb(235,61,29)" fg:x="42" fg:w="1"/><text x="60.2500%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.43%)</title><rect x="60.0000%" y="293" width="1.4286%" height="15" fill="rgb(219,207,3)" fg:x="42" fg:w="1"/><text x="60.2500%" y="303.50"></text></g><g><title>payload_test`tantivy::directory::composite_file::CompositeWrite&lt;W&gt;::close (1 samples, 1.43%)</title><rect x="61.4286%" y="373" width="1.4286%" height="15" fill="rgb(222,56,46)" fg:x="43" fg:w="1"/><text x="61.6786%" y="383.50"></text></g><g><title>payload_test`&lt;tantivy::directory::footer::FooterProxy&lt;W&gt; as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (1 samples, 1.43%)</title><rect x="61.4286%" y="357" width="1.4286%" height="15" fill="rgb(239,76,54)" fg:x="43" fg:w="1"/><text x="61.6786%" y="367.50"></text></g><g><title>payload_test`tantivy_common::writer::TerminatingWrite::terminate (1 samples, 1.43%)</title><rect x="61.4286%" y="341" width="1.4286%" height="15" fill="rgb(231,124,27)" fg:x="43" fg:w="1"/><text x="61.6786%" y="351.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::SafeFileWriter as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (1 samples, 1.43%)</title><rect x="61.4286%" y="325" width="1.4286%" height="15" fill="rgb(249,195,6)" fg:x="43" fg:w="1"/><text x="61.6786%" y="335.50"></text></g><g><title>payload_test`std::fs::File::sync_all (1 samples, 1.43%)</title><rect x="61.4286%" y="309" width="1.4286%" height="15" fill="rgb(237,174,47)" fg:x="43" fg:w="1"/><text x="61.6786%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.43%)</title><rect x="61.4286%" y="293" width="1.4286%" height="15" fill="rgb(206,201,31)" fg:x="43" fg:w="1"/><text x="61.6786%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 1.43%)</title><rect x="62.8571%" y="341" width="1.4286%" height="15" fill="rgb(231,57,52)" fg:x="44" fg:w="1"/><text x="63.1071%" y="351.50"></text></g><g><title>payload_test`&lt;tantivy::directory::footer::FooterProxy&lt;W&gt; as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (2 samples, 2.86%)</title><rect x="62.8571%" y="357" width="2.8571%" height="15" fill="rgb(248,177,22)" fg:x="44" fg:w="2"/><text x="63.1071%" y="367.50">pa..</text></g><g><title>payload_test`tantivy_common::writer::TerminatingWrite::terminate (1 samples, 1.43%)</title><rect x="64.2857%" y="341" width="1.4286%" height="15" fill="rgb(215,211,37)" fg:x="45" fg:w="1"/><text x="64.5357%" y="351.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::SafeFileWriter as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (1 samples, 1.43%)</title><rect x="64.2857%" y="325" width="1.4286%" height="15" fill="rgb(241,128,51)" fg:x="45" fg:w="1"/><text x="64.5357%" y="335.50"></text></g><g><title>payload_test`std::fs::File::sync_all (1 samples, 1.43%)</title><rect x="64.2857%" y="309" width="1.4286%" height="15" fill="rgb(227,165,31)" fg:x="45" fg:w="1"/><text x="64.5357%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.43%)</title><rect x="64.2857%" y="293" width="1.4286%" height="15" fill="rgb(228,167,24)" fg:x="45" fg:w="1"/><text x="64.5357%" y="303.50"></text></g><g><title>payload_test`tantivy::indexer::segment_serializer::SegmentSerializer::close (5 samples, 7.14%)</title><rect x="61.4286%" y="389" width="7.1429%" height="15" fill="rgb(228,143,12)" fg:x="43" fg:w="5"/><text x="61.6786%" y="399.50">payload_te..</text></g><g><title>payload_test`tantivy::store::writer::StoreWriter::close (4 samples, 5.71%)</title><rect x="62.8571%" y="373" width="5.7143%" height="15" fill="rgb(249,149,8)" fg:x="44" fg:w="4"/><text x="63.1071%" y="383.50">payload..</text></g><g><title>payload_test`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (2 samples, 2.86%)</title><rect x="65.7143%" y="357" width="2.8571%" height="15" fill="rgb(243,35,44)" fg:x="46" fg:w="2"/><text x="65.9643%" y="367.50">pa..</text></g><g><title>payload_test`&lt;tantivy::directory::footer::FooterProxy&lt;W&gt; as std::io::Write&gt;::write (2 samples, 2.86%)</title><rect x="65.7143%" y="341" width="2.8571%" height="15" fill="rgb(246,89,9)" fg:x="46" fg:w="2"/><text x="65.9643%" y="351.50">pa..</text></g><g><title>libsystem_kernel.dylib`write (2 samples, 2.86%)</title><rect x="65.7143%" y="325" width="2.8571%" height="15" fill="rgb(233,213,13)" fg:x="46" fg:w="2"/><text x="65.9643%" y="335.50">li..</text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 1.43%)</title><rect x="68.5714%" y="325" width="1.4286%" height="15" fill="rgb(233,141,41)" fg:x="48" fg:w="1"/><text x="68.8214%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 1.43%)</title><rect x="68.5714%" y="309" width="1.4286%" height="15" fill="rgb(239,167,4)" fg:x="48" fg:w="1"/><text x="68.8214%" y="319.50"></text></g><g><title>payload_test`&lt;tantivy::postings::postings_writer::SpecializedPostingsWriter&lt;Rec&gt; as tantivy::postings::postings_writer::PostingsWriter&gt;::serialize (2 samples, 2.86%)</title><rect x="68.5714%" y="373" width="2.8571%" height="15" fill="rgb(209,217,16)" fg:x="48" fg:w="2"/><text x="68.8214%" y="383.50">pa..</text></g><g><title>payload_test`tantivy::postings::serializer::FieldSerializer::close_term (2 samples, 2.86%)</title><rect x="68.5714%" y="357" width="2.8571%" height="15" fill="rgb(219,88,35)" fg:x="48" fg:w="2"/><text x="68.8214%" y="367.50">pa..</text></g><g><title>payload_test`core::ptr::drop_in_place&lt;tantivy::query::explanation::Explanation&gt; (2 samples, 2.86%)</title><rect x="68.5714%" y="341" width="2.8571%" height="15" fill="rgb(220,193,23)" fg:x="48" fg:w="2"/><text x="68.8214%" y="351.50">pa..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 1.43%)</title><rect x="70.0000%" y="325" width="1.4286%" height="15" fill="rgb(230,90,52)" fg:x="49" fg:w="1"/><text x="70.2500%" y="335.50"></text></g><g><title>payload_test`&lt;tantivy::postings::stacker::term_hashmap::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.43%)</title><rect x="71.4286%" y="373" width="1.4286%" height="15" fill="rgb(252,106,19)" fg:x="50" fg:w="1"/><text x="71.6786%" y="383.50"></text></g><g><title>payload_test`tantivy::postings::serializer::FieldSerializer::close (1 samples, 1.43%)</title><rect x="72.8571%" y="373" width="1.4286%" height="15" fill="rgb(206,74,20)" fg:x="51" fg:w="1"/><text x="73.1071%" y="383.50"></text></g><g><title>payload_test`tantivy_fst::raw::build::Builder&lt;W&gt;::into_inner (1 samples, 1.43%)</title><rect x="72.8571%" y="357" width="1.4286%" height="15" fill="rgb(230,138,44)" fg:x="51" fg:w="1"/><text x="73.1071%" y="367.50"></text></g><g><title>payload_test`core::ptr::drop_in_place&lt;tantivy_fst::raw::registry::Registry&gt; (1 samples, 1.43%)</title><rect x="72.8571%" y="341" width="1.4286%" height="15" fill="rgb(235,182,43)" fg:x="51" fg:w="1"/><text x="73.1071%" y="351.50"></text></g><g><title>payload_test`tantivy::postings::postings_writer::serialize_postings (6 samples, 8.57%)</title><rect x="68.5714%" y="389" width="8.5714%" height="15" fill="rgb(242,16,51)" fg:x="48" fg:w="6"/><text x="68.8214%" y="399.50">payload_test..</text></g><g><title>payload_test`tantivy::postings::serializer::InvertedIndexSerializer::new_field (2 samples, 2.86%)</title><rect x="74.2857%" y="373" width="2.8571%" height="15" fill="rgb(248,9,4)" fg:x="52" fg:w="2"/><text x="74.5357%" y="383.50">pa..</text></g><g><title>payload_test`tantivy_fst::raw::build::Builder&lt;W&gt;::new_type (2 samples, 2.86%)</title><rect x="74.2857%" y="357" width="2.8571%" height="15" fill="rgb(210,31,22)" fg:x="52" fg:w="2"/><text x="74.5357%" y="367.50">pa..</text></g><g><title>payload_test`tantivy_fst::raw::registry::Registry::new (2 samples, 2.86%)</title><rect x="74.2857%" y="341" width="2.8571%" height="15" fill="rgb(239,54,39)" fg:x="52" fg:w="2"/><text x="74.5357%" y="351.50">pa..</text></g><g><title>payload_test`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 2.86%)</title><rect x="74.2857%" y="325" width="2.8571%" height="15" fill="rgb(230,99,41)" fg:x="52" fg:w="2"/><text x="74.5357%" y="335.50">pa..</text></g><g><title>payload_test`alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 2.86%)</title><rect x="74.2857%" y="309" width="2.8571%" height="15" fill="rgb(253,106,12)" fg:x="52" fg:w="2"/><text x="74.5357%" y="319.50">pa..</text></g><g><title>libsystem_kernel.dylib`close (1 samples, 1.43%)</title><rect x="77.1429%" y="357" width="1.4286%" height="15" fill="rgb(213,46,41)" fg:x="54" fg:w="1"/><text x="77.3929%" y="367.50"></text></g><g><title>payload_test`&lt;tantivy::directory::footer::FooterProxy&lt;W&gt; as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (2 samples, 2.86%)</title><rect x="77.1429%" y="373" width="2.8571%" height="15" fill="rgb(215,133,35)" fg:x="54" fg:w="2"/><text x="77.3929%" y="383.50">pa..</text></g><g><title>payload_test`tantivy_common::writer::TerminatingWrite::terminate (1 samples, 1.43%)</title><rect x="78.5714%" y="357" width="1.4286%" height="15" fill="rgb(213,28,5)" fg:x="55" fg:w="1"/><text x="78.8214%" y="367.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::SafeFileWriter as tantivy_common::writer::TerminatingWrite&gt;::terminate_ref (1 samples, 1.43%)</title><rect x="78.5714%" y="341" width="1.4286%" height="15" fill="rgb(215,77,49)" fg:x="55" fg:w="1"/><text x="78.8214%" y="351.50"></text></g><g><title>payload_test`std::fs::File::sync_all (1 samples, 1.43%)</title><rect x="78.5714%" y="325" width="1.4286%" height="15" fill="rgb(248,100,22)" fg:x="55" fg:w="1"/><text x="78.8214%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.43%)</title><rect x="78.5714%" y="309" width="1.4286%" height="15" fill="rgb(208,67,9)" fg:x="55" fg:w="1"/><text x="78.8214%" y="319.50"></text></g><g><title>payload_test`tantivy::indexer::segment_writer::SegmentWriter::finalize (19 samples, 27.14%)</title><rect x="54.2857%" y="405" width="27.1429%" height="15" fill="rgb(219,133,21)" fg:x="38" fg:w="19"/><text x="54.5357%" y="415.50">payload_test`tantivy::indexer::segment_write..</text></g><g><title>payload_test`tantivy::store::writer::StoreWriter::close (3 samples, 4.29%)</title><rect x="77.1429%" y="389" width="4.2857%" height="15" fill="rgb(246,46,29)" fg:x="54" fg:w="3"/><text x="77.3929%" y="399.50">paylo..</text></g><g><title>payload_test`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 1.43%)</title><rect x="80.0000%" y="373" width="1.4286%" height="15" fill="rgb(246,185,52)" fg:x="56" fg:w="1"/><text x="80.2500%" y="383.50"></text></g><g><title>payload_test`&lt;tantivy::directory::footer::FooterProxy&lt;W&gt; as std::io::Write&gt;::write (1 samples, 1.43%)</title><rect x="80.0000%" y="357" width="1.4286%" height="15" fill="rgb(252,136,11)" fg:x="56" fg:w="1"/><text x="80.2500%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 1.43%)</title><rect x="80.0000%" y="341" width="1.4286%" height="15" fill="rgb(219,138,53)" fg:x="56" fg:w="1"/><text x="80.2500%" y="351.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::open_write (1 samples, 1.43%)</title><rect x="81.4286%" y="341" width="1.4286%" height="15" fill="rgb(211,51,23)" fg:x="57" fg:w="1"/><text x="81.6786%" y="351.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="81.4286%" y="325" width="1.4286%" height="15" fill="rgb(247,221,28)" fg:x="57" fg:w="1"/><text x="81.6786%" y="335.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="81.4286%" y="309" width="1.4286%" height="15" fill="rgb(251,222,45)" fg:x="57" fg:w="1"/><text x="81.6786%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="81.4286%" y="293" width="1.4286%" height="15" fill="rgb(217,162,53)" fg:x="57" fg:w="1"/><text x="81.6786%" y="303.50"></text></g><g><title>payload_test`std::io::Write::write_all (2 samples, 2.86%)</title><rect x="82.8571%" y="293" width="2.8571%" height="15" fill="rgb(229,93,14)" fg:x="58" fg:w="2"/><text x="83.1071%" y="303.50">pa..</text></g><g><title>payload_test`&lt;tempfile::file::NamedTempFile as std::io::Write&gt;::write (2 samples, 2.86%)</title><rect x="82.8571%" y="277" width="2.8571%" height="15" fill="rgb(209,67,49)" fg:x="58" fg:w="2"/><text x="83.1071%" y="287.50">pa..</text></g><g><title>libsystem_kernel.dylib`write (2 samples, 2.86%)</title><rect x="82.8571%" y="261" width="2.8571%" height="15" fill="rgb(213,87,29)" fg:x="58" fg:w="2"/><text x="83.1071%" y="271.50">li..</text></g><g><title>payload_test`tempfile::file::TempPath::persist (1 samples, 1.43%)</title><rect x="85.7143%" y="293" width="1.4286%" height="15" fill="rgb(205,151,52)" fg:x="60" fg:w="1"/><text x="85.9643%" y="303.50"></text></g><g><title>payload_test`tempfile::file::imp::unix::persist (1 samples, 1.43%)</title><rect x="85.7143%" y="277" width="1.4286%" height="15" fill="rgb(253,215,39)" fg:x="60" fg:w="1"/><text x="85.9643%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__rename (1 samples, 1.43%)</title><rect x="85.7143%" y="261" width="1.4286%" height="15" fill="rgb(221,220,41)" fg:x="60" fg:w="1"/><text x="85.9643%" y="271.50"></text></g><g><title>payload_test`tantivy::core::segment::Segment::open_write (5 samples, 7.14%)</title><rect x="81.4286%" y="373" width="7.1429%" height="15" fill="rgb(218,133,21)" fg:x="57" fg:w="5"/><text x="81.6786%" y="383.50">payload_te..</text></g><g><title>payload_test`&lt;tantivy::directory::managed_directory::ManagedDirectory as tantivy::directory::directory::Directory&gt;::open_write (5 samples, 7.14%)</title><rect x="81.4286%" y="357" width="7.1429%" height="15" fill="rgb(221,193,43)" fg:x="57" fg:w="5"/><text x="81.6786%" y="367.50">payload_te..</text></g><g><title>payload_test`tantivy::directory::managed_directory::ManagedDirectory::register_file_as_managed (4 samples, 5.71%)</title><rect x="82.8571%" y="341" width="5.7143%" height="15" fill="rgb(240,128,52)" fg:x="58" fg:w="4"/><text x="83.1071%" y="351.50">payload..</text></g><g><title>payload_test`tantivy::directory::managed_directory::save_managed_paths (4 samples, 5.71%)</title><rect x="82.8571%" y="325" width="5.7143%" height="15" fill="rgb(253,114,12)" fg:x="58" fg:w="4"/><text x="83.1071%" y="335.50">payload..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (4 samples, 5.71%)</title><rect x="82.8571%" y="309" width="5.7143%" height="15" fill="rgb(215,223,47)" fg:x="58" fg:w="4"/><text x="83.1071%" y="319.50">payload..</text></g><g><title>payload_test`tempfile::util::create_helper (1 samples, 1.43%)</title><rect x="87.1429%" y="293" width="1.4286%" height="15" fill="rgb(248,225,23)" fg:x="61" fg:w="1"/><text x="87.3929%" y="303.50"></text></g><g><title>payload_test`tempfile::file::create_named (1 samples, 1.43%)</title><rect x="87.1429%" y="277" width="1.4286%" height="15" fill="rgb(250,108,0)" fg:x="61" fg:w="1"/><text x="87.3929%" y="287.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="87.1429%" y="261" width="1.4286%" height="15" fill="rgb(228,208,7)" fg:x="61" fg:w="1"/><text x="87.3929%" y="271.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="87.1429%" y="245" width="1.4286%" height="15" fill="rgb(244,45,10)" fg:x="61" fg:w="1"/><text x="87.3929%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="87.1429%" y="229" width="1.4286%" height="15" fill="rgb(207,125,25)" fg:x="61" fg:w="1"/><text x="87.3929%" y="239.50"></text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::open_write (1 samples, 1.43%)</title><rect x="88.5714%" y="325" width="1.4286%" height="15" fill="rgb(210,195,18)" fg:x="62" fg:w="1"/><text x="88.8214%" y="335.50"></text></g><g><title>payload_test`std::fs::OpenOptions::_open (1 samples, 1.43%)</title><rect x="88.5714%" y="309" width="1.4286%" height="15" fill="rgb(249,80,12)" fg:x="62" fg:w="1"/><text x="88.8214%" y="319.50"></text></g><g><title>payload_test`std::sys::unix::fs::File::open_c (1 samples, 1.43%)</title><rect x="88.5714%" y="293" width="1.4286%" height="15" fill="rgb(221,65,9)" fg:x="62" fg:w="1"/><text x="88.8214%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.43%)</title><rect x="88.5714%" y="277" width="1.4286%" height="15" fill="rgb(235,49,36)" fg:x="62" fg:w="1"/><text x="88.8214%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`close (2 samples, 2.86%)</title><rect x="90.0000%" y="277" width="2.8571%" height="15" fill="rgb(225,32,20)" fg:x="63" fg:w="2"/><text x="90.2500%" y="287.50">li..</text></g><g><title>payload_test`std::fs::File::sync_all (1 samples, 1.43%)</title><rect x="92.8571%" y="277" width="1.4286%" height="15" fill="rgb(215,141,46)" fg:x="65" fg:w="1"/><text x="93.1071%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.43%)</title><rect x="92.8571%" y="261" width="1.4286%" height="15" fill="rgb(250,160,47)" fg:x="65" fg:w="1"/><text x="93.1071%" y="271.50"></text></g><g><title>payload_test`tantivy::indexer::segment_serializer::SegmentSerializer::for_segment (12 samples, 17.14%)</title><rect x="81.4286%" y="389" width="17.1429%" height="15" fill="rgb(216,222,40)" fg:x="57" fg:w="12"/><text x="81.6786%" y="399.50">payload_test`tantivy::index..</text></g><g><title>payload_test`tantivy::postings::serializer::InvertedIndexSerializer::open (7 samples, 10.00%)</title><rect x="88.5714%" y="373" width="10.0000%" height="15" fill="rgb(234,217,39)" fg:x="62" fg:w="7"/><text x="88.8214%" y="383.50">payload_test`t..</text></g><g><title>payload_test`tantivy::core::segment::Segment::open_write (7 samples, 10.00%)</title><rect x="88.5714%" y="357" width="10.0000%" height="15" fill="rgb(207,178,40)" fg:x="62" fg:w="7"/><text x="88.8214%" y="367.50">payload_test`t..</text></g><g><title>payload_test`&lt;tantivy::directory::managed_directory::ManagedDirectory as tantivy::directory::directory::Directory&gt;::open_write (7 samples, 10.00%)</title><rect x="88.5714%" y="341" width="10.0000%" height="15" fill="rgb(221,136,13)" fg:x="62" fg:w="7"/><text x="88.8214%" y="351.50">payload_test`&lt;..</text></g><g><title>payload_test`tantivy::directory::managed_directory::ManagedDirectory::register_file_as_managed (6 samples, 8.57%)</title><rect x="90.0000%" y="325" width="8.5714%" height="15" fill="rgb(249,199,10)" fg:x="63" fg:w="6"/><text x="90.2500%" y="335.50">payload_test..</text></g><g><title>payload_test`tantivy::directory::managed_directory::save_managed_paths (6 samples, 8.57%)</title><rect x="90.0000%" y="309" width="8.5714%" height="15" fill="rgb(249,222,13)" fg:x="63" fg:w="6"/><text x="90.2500%" y="319.50">payload_test..</text></g><g><title>payload_test`&lt;tantivy::directory::mmap_directory::MmapDirectory as tantivy::directory::directory::Directory&gt;::atomic_write (6 samples, 8.57%)</title><rect x="90.0000%" y="293" width="8.5714%" height="15" fill="rgb(244,185,38)" fg:x="63" fg:w="6"/><text x="90.2500%" y="303.50">payload_test..</text></g><g><title>payload_test`tempfile::file::TempPath::persist (3 samples, 4.29%)</title><rect x="94.2857%" y="277" width="4.2857%" height="15" fill="rgb(236,202,9)" fg:x="66" fg:w="3"/><text x="94.5357%" y="287.50">paylo..</text></g><g><title>payload_test`tempfile::file::imp::unix::persist (3 samples, 4.29%)</title><rect x="94.2857%" y="261" width="4.2857%" height="15" fill="rgb(250,229,37)" fg:x="66" fg:w="3"/><text x="94.5357%" y="271.50">paylo..</text></g><g><title>libsystem_kernel.dylib`__rename (3 samples, 4.29%)</title><rect x="94.2857%" y="245" width="4.2857%" height="15" fill="rgb(206,174,23)" fg:x="66" fg:w="3"/><text x="94.5357%" y="255.50">libsy..</text></g><g><title>all (70 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(211,33,43)" fg:x="0" fg:w="70"/><text x="0.2500%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (64 samples, 91.43%)</title><rect x="8.5714%" y="501" width="91.4286%" height="15" fill="rgb(245,58,50)" fg:x="6" fg:w="64"/><text x="8.8214%" y="511.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (63 samples, 90.00%)</title><rect x="10.0000%" y="485" width="90.0000%" height="15" fill="rgb(244,68,36)" fg:x="7" fg:w="63"/><text x="10.2500%" y="495.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>payload_test`std::sys::unix::thread::Thread::new::thread_start (63 samples, 90.00%)</title><rect x="10.0000%" y="469" width="90.0000%" height="15" fill="rgb(232,229,15)" fg:x="7" fg:w="63"/><text x="10.2500%" y="479.50">payload_test`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>payload_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (62 samples, 88.57%)</title><rect x="11.4286%" y="453" width="88.5714%" height="15" fill="rgb(254,30,23)" fg:x="8" fg:w="62"/><text x="11.6786%" y="463.50">payload_test`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>payload_test`std::sys_common::backtrace::__rust_begin_short_backtrace (62 samples, 88.57%)</title><rect x="11.4286%" y="437" width="88.5714%" height="15" fill="rgb(235,160,14)" fg:x="8" fg:w="62"/><text x="11.6786%" y="447.50">payload_test`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>payload_test`tantivy::indexer::index_writer::index_documents (32 samples, 45.71%)</title><rect x="54.2857%" y="421" width="45.7143%" height="15" fill="rgb(212,155,44)" fg:x="38" fg:w="32"/><text x="54.5357%" y="431.50">payload_test`tantivy::indexer::index_writer::index_documents</text></g><g><title>payload_test`tantivy::indexer::segment_writer::SegmentWriter::for_segment (13 samples, 18.57%)</title><rect x="81.4286%" y="405" width="18.5714%" height="15" fill="rgb(226,2,50)" fg:x="57" fg:w="13"/><text x="81.6786%" y="415.50">payload_test`tantivy::indexer..</text></g><g><title>payload_test`tantivy::postings::stacker::term_hashmap::TermHashMap::new (1 samples, 1.43%)</title><rect x="98.5714%" y="389" width="1.4286%" height="15" fill="rgb(234,177,6)" fg:x="69" fg:w="1"/><text x="98.8214%" y="399.50"></text></g><g><title>payload_test`tantivy::postings::stacker::memory_arena::MemoryArena::new (1 samples, 1.43%)</title><rect x="98.5714%" y="373" width="1.4286%" height="15" fill="rgb(217,24,9)" fg:x="69" fg:w="1"/><text x="98.8214%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 1.43%)</title><rect x="98.5714%" y="357" width="1.4286%" height="15" fill="rgb(220,13,46)" fg:x="69" fg:w="1"/><text x="98.8214%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 1.43%)</title><rect x="98.5714%" y="341" width="1.4286%" height="15" fill="rgb(239,221,27)" fg:x="69" fg:w="1"/><text x="98.8214%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 1.43%)</title><rect x="98.5714%" y="325" width="1.4286%" height="15" fill="rgb(222,198,25)" fg:x="69" fg:w="1"/><text x="98.8214%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 1.43%)</title><rect x="98.5714%" y="309" width="1.4286%" height="15" fill="rgb(211,99,13)" fg:x="69" fg:w="1"/><text x="98.8214%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 1.43%)</title><rect x="98.5714%" y="293" width="1.4286%" height="15" fill="rgb(232,111,31)" fg:x="69" fg:w="1"/><text x="98.8214%" y="303.50"></text></g></svg></svg>