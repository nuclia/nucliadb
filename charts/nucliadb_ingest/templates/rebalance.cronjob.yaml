kind: CronJob
apiVersion: batch/v1
metadata:
  name: nucliadb-rebalance
  labels:
    app: "{{ .Chart.Name }}"
    version: "{{ .Values.hash }}"
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  schedule: "0 */6 * * *"
  jobTemplate:
    metadata:
      name: nucliadb-rebalance
      annotations:
        sidecar.istio.io/inject: "false"      
      labels:
        app: {{ .Chart.Name }}
        role: cronjobs
        version: "{{ .Values.hash }}"
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: "{{ .Chart.Name }}"
            metrics: "enabled"
            role: cronjobs
            version: "{{ .Values.hash }}"
            release: "{{ .Release.Name }}"
          annotations:
            sidecar.istio.io/inject: "false"
            {{- if hasKey .Values "extra_pod_annotations" }}
{{ toYaml .Values.extra_pod_annotations | indent 12 }}
            {{- end }}
        spec:
          serviceAccountName: {{ ((.Values.purgeCron).serviceAccount) | default "default" }}
          nodeSelector:
{{ toYaml .Values.nodeSelector | indent 12 }}
          topologySpreadConstraints:
{{ toYaml .Values.topologySpreadConstraints | indent 12 }}
          affinity:
{{ toYaml .Values.affinity | indent 12 }}
          tolerations:
{{ toYaml .Values.tolerations | indent 12 }}
          dnsPolicy: ClusterFirst
{{- with .Values.priorityClassName }}
          priorityClassName: {{ . }}
{{- end }}
          restartPolicy: Never
          containers:
          - name: nucliadb-rebalance
            image: "{{ .Values.containerRegistry }}/{{ .Values.image }}"
            envFrom:
              - configMapRef:
                  name: {{ .Release.Name }}-config
              - secretRef:
                  name: {{ .Release.Name }}-config
              {{- if .Values.envFrom }}
              {{- toYaml .Values.envFrom | nindent 14 }}
              {{- end }}
            env:
              - name: VERSION
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['version']
              {{- include "toEnv" .Values.env | indent 14 }}
            imagePullPolicy: Always
            command: ["nucliadb-rebalance"]
            ports:
            - name: metrics
              containerPort: {{ .Values.serving.metricsPort }}
{{- if .Values.nats.secretName }}
            volumeMounts:
              - name: nats-creds
                readOnly: true
                mountPath: /appsecrets
{{- end }}
{{- if .Values.nats.regionalSecretName }}
              - name: regional-nats-creds
                readOnly: true
                mountPath: /regioncreds
{{- end }}
{{- if .Values.nats.secretName }}
          volumes:
          - name: nats-creds
            secret:
              secretName: {{ .Values.nats.secretName }}
{{- end }}
{{- if .Values.nats.regionalSecretName }}
          - name: regional-nats-creds
            secret:
              secretName: {{ .Values.nats.regionalSecretName }}
{{- end }}