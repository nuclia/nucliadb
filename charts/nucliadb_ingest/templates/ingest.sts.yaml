apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ingest
  labels:
    app: ingest
    app.kubernetes.io/name: ingest
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    version: "{{ .Chart.Version | replace "+" "_" }}"
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  serviceName: ingest-headless
  selector:
    matchLabels:
      app: ingest
      app.kubernetes.io/name: ingest
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  template:
    metadata:
      name: ingest
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "{{.Values.serving.swim }},{{.Values.serving.monitor }},{{.Values.serving.metrics }}"
        traffic.sidecar.istio.io/excludeOutboundPorts: "{{.Values.services.maindb }},{{.Values.services.nats }},{{.Values.serving.swim }}"
      labels:
        app: ingest
        app.kubernetes.io/name: ingest
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        version: "{{ .Chart.Version | replace "+" "_" }}"
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      dnsPolicy: ClusterFirst
      containers:
      - name: ingest
        securityContext:
          privileged: true
        image: "{{ .Values.containerRegistry }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.serving.grpc }}"]
          initialDelaySeconds: 2
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.serving.grpc }}"]
          initialDelaySeconds: 2
        command: ["/entrypoint.sh"]
        args: ["ndb_ingest"]
        envFrom:
        - configMapRef:
            name: nucliadb-config
        - configMapRef:
            name: {{ .Release.Name }}-config
        ports:
        - name: grpc-ingest
          containerPort: {{ .Values.serving.grpc }}
        - containerPort: {{ .Values.serving.monitor }}
        - containerPort: {{ .Values.serving.metrics }}
        - name: swim
          containerPort: {{ .Values.serving.swim }}
          protocol: UDP
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- if .Values.nats.secretName }}
        volumeMounts:
          - name: nats-creds
            readOnly: true
            mountPath: /appsecrets
{{- end }}
{{- if .Values.tracing.enabled }}
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:{{ .Values.tracing.jaegerAgentTag }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5775
            name: zk-compact-trft
            protocol: UDP
          - containerPort: 5778
            name: config-rest
            protocol: TCP
          - containerPort: 6831
            name: jg-compact-trft
            protocol: UDP
          - containerPort: 6832
            name: jg-binary-trft
            protocol: UDP
          - containerPort: 14271
            name: admin-http
            protocol: TCP
        args:
          - --reporter.grpc.host-port=dns:///{{ .Values.tracing.jaegerCollectorHost }}:{{ .Values.tracing.jaegerCollectorGrpcPort }}
          - --reporter.type=grpc
{{- end }}
{{- if .Values.nats.secretName }}
      volumes:
      - name: nats-creds
        secret:
          secretName: {{ .Values.nats.secretName }}
{{- end }}
