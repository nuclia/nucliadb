apiVersion: apps/v1
kind: Deployment
metadata:
  name: nidx
  labels:
    app: nidx
    version: "{{ .Chart.Version | replace "+" "_" }}"
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.nidx.replicas }}
  selector:
    matchLabels:
      app: nidx
      release: "{{ .Release.Name }}"
      heritage: "{{ .Release.Service }}"
  template:
    metadata:
      {{- with .Values.nidx.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
      name: nidx
      labels:
        app: nidx
        version: "{{ .Chart.Version | replace "+" "_" }}"
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      nodeSelector:
{{ toYaml .Values.nidx.nodeSelector | indent 8 }}
      topologySpreadConstraints:
{{ toYaml .Values.nidx.topologySpreadConstraints | indent 8 }}
      affinity:
{{ toYaml .Values.nidx.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.nidx.tolerations | indent 8 }}
      dnsPolicy: ClusterFirst
{{- with .Values.nidx.priorityClassName }}
      priorityClassName: {{ . }}
{{- end }}
      serviceAccountName:  {{ .Values.serviceAccount | default "default" }}
      containers:
      - name: app
        image: "{{ .Values.nidx.image }}:{{ .Values.nidx.imageVersion | default .Chart.AppVersion }}"
        securityContext:
          privileged: false
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        livenessProbe:
          exec:
            command: ["nidx", "ctl", "alive"]
        readinessProbe:
          exec:
            command: ["nidx", "ctl", "ready"]
        command: [
          "nidx",
          "api",
          "searcher"
        ]
        env:
          - name: CONTROL_SOCKET
            value: "/run/nidx.sock"
          {{- range $key, $value := .Values.nidx.env }}
          - name: "{{ $key }}"
            value: {{ tpl $value $ | toJson }}
          {{- end }}
          {{- if .Values.nidx.envSecrets }}
{{ toYaml .Values.nidx.envSecrets | indent 10 }}
          {{- end }}
          - name: WORK_PATH
            value: "/data"
        {{- if .Values.nidx.envFrom }}
        envFrom:
          {{- toYaml .Values.nidx.envFrom | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.nidx.resources | indent 10 }}
        volumeMounts:
{{ toYaml .Values.nidx.volumeMounts | indent 10 }}
      volumes:
{{ toYaml .Values.nidx.volumes | indent 8 }}
