apiVersion: apps/v1
kind: Deployment
metadata:
  name: writer
  labels:
    app: writer
    version: "{{ .Chart.Version | replace "+" "_" }}"
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: writer
      release: "{{ .Release.Name }}"
      heritage: "{{ .Release.Service }}"
  template:
    metadata:
      name: writer
      labels:
        app: writer
        version: "{{ .Chart.Version | replace "+" "_" }}"
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "{{.Values.config.dm_redis_port }},{{.Values.services.maindb }},{{.Values.services.nats }}"
        traffic.sidecar.istio.io/excludeInboundPorts: "{{ .Values.serving.metricsPort }}"
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      topologySpreadConstraints:
{{ toYaml .Values.topologySpreadConstraints | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      dnsPolicy: ClusterFirst
      containers:
      - name: writer
        image: "{{ .Values.containerRegistry }}/{{ .Values.image }}"
        securityContext:
          privileged: true
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: {{ .Values.serving.port }}
          initialDelaySeconds: 20
          timeoutSeconds: 10
          periodSeconds: 20
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: {{ .Values.serving.port }}
          initialDelaySeconds: 20
          timeoutSeconds: 10
          periodSeconds: 20
        command: [
          "writer-metrics"
        ]
        envFrom:
        - configMapRef:
            name: nucliadb-config
        - configMapRef:
            name: writer-config
        ports:
        - name: http-writer
          containerPort: {{ .Values.serving.port }}
        - name: metrics
          containerPort: {{ .Values.serving.metricsPort }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- if .Values.nats.secretName }}
        volumeMounts:
          - name: nats-creds
            readOnly: true
            mountPath: /appsecrets
{{- end }}
{{- if .Values.tracing.enabled }}
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:{{ .Values.tracing.jaegerAgentTag }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5775
            name: zk-compact-trft
            protocol: UDP
          - containerPort: 5778
            name: config-rest
            protocol: TCP
          - containerPort: 6831
            name: jg-compact-trft
            protocol: UDP
          - containerPort: 6832
            name: jg-binary-trft
            protocol: UDP
          - containerPort: 14271
            name: admin-http
            protocol: TCP
        args:
          - --reporter.grpc.host-port=dns:///{{ .Values.tracing.jaegerCollectorHost }}:{{ .Values.tracing.jaegerCollectorGrpcPort }}
          - --reporter.type=grpc
{{- end }}
{{- if .Values.nats.secretName }}
      volumes:
      - name: nats-creds
        secret:
          secretName: {{ .Values.nats.secretName }}
{{- end }}
