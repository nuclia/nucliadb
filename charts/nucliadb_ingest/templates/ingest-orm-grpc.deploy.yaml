apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingest-orm-grpc
  labels:
    app: ingest-orm-grpc
    version: "{{ .Chart.Version | replace "+" "_" }}"
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.ingest_orm_grpc_replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: ingest-orm-grpc
      release: "{{ .Release.Name }}"
      heritage: "{{ .Release.Service }}"
  template:
    metadata:
      name: ingest-orm-grpc
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "{{.Values.serving.metricsPort }}"
        traffic.sidecar.istio.io/excludeOutboundPorts: "{{.Values.services.maindb }},{{.Values.services.nats }},20160,2380"
        # do not have access to dependency chart cm this component references
        checksum/cm: {{ include (print $.Template.BasePath "/ingest.cm.yaml") . | sha256sum }}
        {{- if hasKey .Values "extra_pod_annotations" }}
{{ toYaml .Values.extra_pod_annotations | indent 8 }}
        {{- end }}
      labels:
        app: ingest-orm-grpc
        version: "{{ .Chart.Version | replace "+" "_" }}"
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      topologySpreadConstraints:
{{ toYaml .Values.topologySpreadConstraints | indent 8 }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      dnsPolicy: ClusterFirst
{{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
{{- end }}
      serviceAccountName: {{ ((.Values.ingest_orm_grpc).serviceAccount) | default "default" }}
      containers:
      - name: ingest-orm-grpc
        image: "{{ .Values.containerRegistry }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.serving.grpc }}"]
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.serving.grpc }}"]
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        command: [
          "nucliadb-ingest-orm-grpc"
        ]
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-config
          - secretRef:
              name: {{ .Release.Name }}-config
          {{- if .Values.envFrom }}
          {{- toYaml .Values.envFrom | nindent 10 }}
          {{- end }}
        env:
          - name: VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['version']
          {{- include "toEnv" .Values.env | indent 10 }}
        ports:
        - name: grpc-ingest
          containerPort: {{ .Values.serving.grpc }}
        - name: metrics
          containerPort: {{.Values.serving.metricsPort }}
        resources:
{{ toYaml .Values.ingest_orm_grpc_resources | indent 10 }}
{{- if .Values.nats.secretName }}
        volumeMounts:
          - name: nats-creds
            readOnly: true
            mountPath: /appsecrets
{{- end }}
{{- if .Values.nats.regionalSecretName }}
          - name: regional-nats-creds
            readOnly: true
            mountPath: /regioncreds
{{- end }}
{{- if .Values.nats.secretName }}
      volumes:
      - name: nats-creds
        secret:
          secretName: {{ .Values.nats.secretName }}
{{- end }}
{{- if .Values.nats.regionalSecretName }}
      - name: regional-nats-creds
        secret:
          secretName: {{ .Values.nats.regionalSecretName }}
{{- end }}
