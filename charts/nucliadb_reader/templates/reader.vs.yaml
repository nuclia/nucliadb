apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: reader
spec:
  gateways:
    - "{{ .Values.vs.gateway }}"
  hosts:
    - "{{ .Values.zone }}.{{ .Values.vs.host }}"
  http:
    - name: nucliadb_reader
      match:
        - method:
            regex: "GET|OPTIONS"
          uri:
            regex: '^/api/v\d+/kb/[^/]+$'
        - method:
            regex: "GET|OPTIONS"
          uri:
            regex: '^/api/v\d+/kb/[^/]+/(entitiesgroup|labelset|vectorset|custom-synonyms|export|import|notifications|processing-status)s?.*'
        - method:
            regex: OPTIONS
          uri:
            regex: ^/api/v\d+/kb/[^/]+/(upload)?.*
        - method:
            regex: "GET|OPTIONS"
          uri:
            regex: '^/api/v\d+/kb/[^/]+/(resource|slug)/[^/]+$'
        - method:
            regex: "GET|OPTIONS"
          uri:
            regex: '^/api/v\d+/kb/[^/]+/(resource|slug)/[^/]+/(text|file|link|layout|conversation|keywordset|datetime).*'
        - uri:
            regex: '^/api/v\d+/kb/[^/]+/resources'
          method:
            regex: "GET|OPTIONS"
        - uri:
            regex: '^/api/v\d+/kb/[^/]+/model.*'
          method:
            regex: "GET|OPTIONS"
        - uri:
            regex: '^/api/v\d+/kb/[^/]+/configuration'
          method:
            regex: "GET|OPTIONS"
        - uri:
            regex: '^/api/v\d+/kb/[^/]+/schema'
          method:
            regex: "GET|OPTIONS"
        - uri:
            regex: '^/api/v\d+/kb/[^/]+/feedback.*'
          method:
            regex: "GET|OPTIONS"
      retries:
        attempts: 3
        retryOn: connect-failure
      route:
        - destination:
            port:
              number: {{.Values.serving.port}}
            host: "reader.{{ .Release.Namespace }}.svc.cluster.local"
